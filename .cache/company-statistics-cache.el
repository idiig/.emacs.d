(setq company-statistics--scores #s(hash-table size 400 test equal rehash-size 1.5 rehash-threshold 0.8125 data (":defer" (((:keyword "use-package") . 4) (emacs-lisp-mode . 4) (nil . 4) ((:file "/Users/idiig/.emacs.d/core/idiig-ui.el") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 2) ((:file "/Users/idiig/.emacs.d/core/idiig-auto-complete.el") . 1)) ":config" (((:keyword "use-package") . 6) (emacs-lisp-mode . 8) (nil . 8) ((:keyword "setq") . 2) ((:file "/Users/idiig/.emacs.d/core/idiig-global-keybindings.el") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 6) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 2) ((:file "/Users/idiig/.emacs.d/core/idiig-evil.el") . 1)) "evil-leader/set-key" (((:file "/Users/idiig/.emacs.d/modules/idiig-project-search-management.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 3) (nil . 3) ((:keyword "evil-define-key") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 2) ((:keyword "dolist") . 1)) "idiig" (((:file "/Users/idiig/.emacs.d/modules/idiig-project-search-management.el") . 1) ((:file "/Users/idiig/.emacs.d/core/idiig-core.el") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-auto-complete.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "use-package" ((emacs-lisp-mode . 7) (nil . 7) ((:keyword "use-package") . 1) ((:keyword "setq") . 4) ((:keyword "require") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 3) ((:file "/Users/idiig/.emacs.d/modules/idiig-auto-complete.el") . 1) ((:file "/Users/idiig/.emacs.d/core/idiig-ui.el") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 3) ((:file "/Users/idiig/.emacs.d/modules/idiig-better-search.el") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-ess.el") . 1) ((:keyword "progn") . 1) ((:file "/Users/idiig/.emacs.d/core/idiig-auto-complete.el") . 1)) "golden-ratio-mode" (((:file "/Users/idiig/.emacs.d/core/idiig-better-default.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "~/Nutstore/bibfolder/" (((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "weight" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1) (nil . 1)) "ssss" (((:file "/Users/idiig/emacs-test/s.org") . 1) (org-mode . 1) (text-mode . 1)) "progn" (((:keyword "use-package") . 9) (emacs-lisp-mode . 12) (nil . 12) ((:file "/Users/idiig/.emacs.d/core/idiig-better-default.el") . 1) ((:file "/Users/idiig/.emacs.d/core/idiig-ui.el") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 7) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 3) ((:keyword "setq") . 3) ((:file "/Users/idiig/.emacs.d/core/idiig-auto-complete.el") . 1)) ":after" (((:keyword "use-package") . 7) (emacs-lisp-mode . 7) (nil . 7) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 3) ((:file "/Users/idiig/.emacs.d/core/idiig-ui.el") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 2) ((:file "/Users/idiig/.emacs.d/core/idiig-auto-complete.el") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-git.el") . 1)) "motion" (((:file "/Users/idiig/.emacs.d/modules/idiig-project-search-management.el") . 1) ((:keyword "evil-define-key") . 1) (emacs-lisp-mode . 1) (nil . 1)) ":init" (((:keyword "use-package") . 7) (emacs-lisp-mode . 7) (nil . 7) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 6) ((:file "/Users/idiig/.emacs.d/core/idiig-ui.el") . 1)) "occur" (((:keyword "when") . 1)) "org-agenda-mode" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 2) (nil . 2) ((:file "/Users/idiig/.emacs.d/core/idiig-ui.el") . 1) ((:keyword "use-package") . 1)) "yas-wrap-around-region" (((:file "/Users/idiig/.emacs.d/modules/idiig-auto-complete.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "property" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "normal" (((:keyword "with-eval-after-load") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-project-search-management.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "effectiveness" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1) (nil . 1)) ":hook" ((emacs-lisp-mode . 7) (nil . 7) ((:keyword "use-package") . 7) ((:file "/Users/idiig/.emacs.d/core/idiig-ui.el") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 5) ((:file "/Users/idiig/.emacs.d/core/idiig-auto-complete.el") . 1)) "addbibresource" ((nil . 2) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/test/eeee.org") . 1) (org-mode . 1)) "defvar" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "require" ((emacs-lisp-mode . 4) (nil . 4) ((:file "/Users/idiig/.emacs.d/init.el") . 1) ((:keyword "require") . 2) ((:file "/Users/idiig/.emacs.d/modules/idiig-python.el") . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 3) ((:keyword "lambda") . 2)) "call-interactively" ((nil . 1)) "interactive" (((:file "/Users/idiig/.emacs.d/modules/idiig-project-search-management.el") . 1) ((:keyword "defun") . 1) ((:file "/Users/idiig/.emacs.d/core/idiig-global-keybindings.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "helm-do-ag" (((:keyword "if") . 1)) "deadline" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 2) ((:keyword "setq") . 2) (emacs-lisp-mode . 2) (nil . 2)) "idiig//helm-do-ag-region-or-symbol" (((:file "/Users/idiig/.emacs.d/modules/idiig-project-search-management.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "idiig/helm-files-smart-do-search" (((:file "/Users/idiig/.emacs.d/modules/idiig-project-search-management.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "evilified-state-evilify" ((emacs-lisp-mode . 1) (nil . 1)) "dplyr" ((ess-r-mode . 1) (nil . 1)) "define-key" (((:keyword "evil-define-key") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-project-search-management.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "helm-map" (((:file "/Users/idiig/.emacs.d/modules/idiig-project-search-management.el") . 1) ((:keyword "evil-define-key") . 1) (emacs-lisp-mode . 1) (nil . 1)) "check" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/test.org") . 1) (org-mode . 1) (nil . 1)) "type" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1) ((:keyword "return") . 1) (python-mode . 1) (nil . 1)) "org-mode-map" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "save-place" (((:file "/Users/idiig/.emacs.d/core/idiig-better-default.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "10001" (((:symbol "はる") . 1)) "MinionPro" (((:file "/Users/idiig/.emacs.d/tmp/draft.tex") . 2) ((:keyword "\\setmainfont") . 2) (latex-mode . 2) (nil . 2)) "hydra" (((:file "/Users/idiig/.emacs.d/core/idiig-better-default.el") . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/core/idiig-global-keybindings.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "equation" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/token_waka.org") . 1) (org-mode . 1)) "shrink" (((:keyword "interactive") . 1) ((:file "/Users/idiig/.emacs.d/core/idiig-global-keybindings.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "hyperref" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "delta" (((:file "/Users/idiig/.emacs.d/core/idiig-global-keybindings.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "enlarge" (((:keyword "interactive") . 1) ((:file "/Users/idiig/.emacs.d/core/idiig-global-keybindings.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "enlarge-window" (((:file "/Users/idiig/.emacs.d/core/idiig-global-keybindings.el") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "winum-mode" (((:file "/Users/idiig/.emacs.d/core/idiig-better-default.el") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "winum-select-window-1" (((:keyword "or") . 1) ((:keyword "defhydra") . 1) ((:file "/Users/idiig/.emacs.d/core/idiig-global-keybindings.el") . 1) ((:keyword "push") . 1) (emacs-lisp-mode . 1) (nil . 1)) "latex" ((org-mode . 1) (nil . 1) ((:file "/Users/idiig/emacs-test/test.org") . 2)) "which-key-replacement-alist" (((:file "/Users/idiig/.emacs.d/core/idiig-global-keybindings.el") . 1) ((:keyword "push") . 1) (emacs-lisp-mode . 1) (nil . 1)) "hydra-buffer" (((:keyword "setq") . 1)) "LATEX" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/token_waka.org") . 1) (org-mode . 2) (nil . 2) ((:file "/Users/idiig/emacs-test/test.org") . 1)) "transpose(args, copy)" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1) ((:symbol "nil") . 1) ((:keyword "else") . 1) (python-mode . 1) (nil . 1)) "ad-return-value" (((:file "/Users/idiig/.emacs.d/core/idiig-better-default.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "new-bindings" (((:file "/Users/idiig/.emacs.d/core/idiig-better-default.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "target" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1) (nil . 1)) "import" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/preprocessing.py") . 1) ((:keyword "import") . 1)) "buffer-file-name" (((:file "/Users/idiig/.emacs.d/core/idiig-ui.el") . 1) ((:keyword "if") . 1) (emacs-lisp-mode . 1) (nil . 1)) "schedule" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 2) ((:keyword "setq") . 2) (emacs-lisp-mode . 2) (nil . 2)) "messages-buffer-mode" (((:keyword "with-eval-after-load") . 1)) "dired-mode-hook" (((:file "/Users/idiig/.emacs.d/core/idiig-better-default.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "yasnippet" (((:keyword "use-package") . 1)) "ivy-prescient" (((:file "/Users/idiig/.emacs.d/modules/idiig-project-search-management.el") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "yas-global-mode" (((:keyword "use-package") . 1) ((:keyword "unless") . 1)) "yas-minor-mode" (((:keyword "setq") . 1)) "<au" (((:file "/Users/idiig/emacstest/org.org") . 1) (org-mode . 1) (nil . 1)) "<ta" (((:file "/Users/idiig/emacstest/org.org") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/token_waka.org") . 1) (org-mode . 2) (nil . 2) ((:file "/Users/idiig/emacs-test/s.org") . 1)) "fci-mode" ((emacs-lisp-mode . 1) (nil . 1)) "usepackage" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 3) ((:keyword "setq") . 3) (emacs-lisp-mode . 3) (nil . 6) ((:file "/Users/idiig/emacs-test/test.org") . 1) (org-mode . 2) ((:keyword "\\") . 1) (latex-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) "evil-leader/set-key-for-mode" ((emacs-lisp-mode . 1) (nil . 1) ((:keyword "evil-define-key") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1) ((:keyword "progn") . 1)) "helm-do-ag-buffers" (((:file "/Users/idiig/.emacs.d/modules/idiig-project-search-management.el") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "SourceHanSerifSC" (((:file "/Users/idiig/.emacs.d/tmp/draft.tex") . 2) ((:keyword "\\setmainfont") . 2) (latex-mode . 2) (nil . 2)) ":session" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/test.org") . 6) (org-mode . 6) (nil . 6)) "frac" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/token_waka.org") . 1) (org-mode . 2) (nil . 2) ((:file "/Users/idiig/Nutstore/org-notes/journal.org") . 1)) "keybindings" ((emacs-lisp-mode . 3) (nil . 5) ((:file "/Users/idiig/.emacs.d/.git/COMMIT_EDITMSG") . 2) (text-mode . 2) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 4) ((:keyword "evil-define-key") . 4) ((:keyword "progn") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-prog.el") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) "shrink-window" (((:file "/Users/idiig/.emacs.d/core/idiig-global-keybindings.el") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "org-capture" ((emacs-lisp-mode . 1) (nil . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1) ((:keyword "use-package") . 1)) "function" ((nil . 1) (emacs-lisp-mode . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) "py_" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/token_waka.org") . 1)) "return" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 3) ((:keyword "print") . 1) (python-mode . 3) (nil . 3) ((:keyword "in") . 1) ((:keyword "if") . 1)) ":commands" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1) ((:keyword "use-package") . 2) (emacs-lisp-mode . 2) (nil . 2) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) "provide" ((emacs-lisp-mode . 1) (nil . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) "if" (((:file "/Users/idiig/emacs-test/s.py") . 1) (python-mode . 2) (nil . 2) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1) ((:keyword "as") . 1)) "expand-region" (((:file "/Users/idiig/.emacs.d/core/idiig-better-default.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "method" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1) (nil . 1)) "markdown" (((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 2) ((:keyword "evil-define-key") . 2) (emacs-lisp-mode . 2) (nil . 2)) "DataFrame" (((:keyword "as") . 1) ((:file "/Users/idiig/emacs-test/s.py") . 1) ((:symbol "pd") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "zetteldeft" (((:keyword "defun") . 1) ((:keyword "progn") . 1)) "association" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 2) (org-mode . 2) (nil . 2)) "average" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 3) (org-mode . 3) (nil . 3)) "array(object, dtype, *, copy, order, subok, ndmin)" (((:file "/Users/idiig/emacs-test/s.py") . 1) ((:symbol "np") . 1) ((:keyword "as") . 1) (python-mode . 1) (nil . 1)) "test" ((eshell-mode . 1) (nil . 9) ((:file "/Users/idiig/Nutstore/org-files/research-notes/2021-05-05T2322.org") . 1) (org-mode . 8) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/test.org") . 1) ((:file "/Users/idiig/emacs-test/test2/ttttt.org") . 1) ((:file "/Users/idiig/emacs-test/test.org") . 5)) "relations" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1) (nil . 1)) "dired-mode-map" (((:file "/Users/idiig/.emacs.d/core/idiig-better-default.el") . 1) ((:keyword "evilified-state-evilify-map") . 1) (emacs-lisp-mode . 1) (nil . 1)) "classic" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1) (nil . 1)) "window" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 2) (org-mode . 2) (nil . 2)) "semantic" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1) (nil . 1)) "properties" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "contextual" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 3) (org-mode . 3) (nil . 3)) "clock" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "pd" (((:file "/Users/idiig/emacs-test/s.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "priority" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 2) ((:keyword "setq") . 2) (emacs-lisp-mode . 2) (nil . 2)) "Sans" (((:file "/Users/idiig/.emacs.d/core/idiig-ui.el") . 1) ((:keyword "let") . 1) (emacs-lisp-mode . 1) (nil . 1)) "journal" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) ":custom" (((:file "/Users/idiig/.emacs.d/core/idiig-better-default.el") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "latexmk" (((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1) ((:keyword "if") . 1) (emacs-lisp-mode . 1) (nil . 1)) "lambda" (((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 3) ((:keyword "use-package") . 4) (emacs-lisp-mode . 4) (nil . 4) ((:file "/Users/idiig/.emacs.d/core/idiig-auto-complete.el") . 1)) "author" (((:file "/Users/idiig/emacstest/test.bib") . 1) (bibtex-mode . 1) (nil . 1)) "auctex-latexmk-setup" (((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 3) ((:keyword "require") . 1) (emacs-lisp-mode . 3) (nil . 3) ((:keyword "progn") . 2)) "magic-latex-buffer" (((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 1) (nil . 1)) ":ensure" (((:keyword "use-package") . 5) (emacs-lisp-mode . 5) (nil . 5) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 4)) "pdf-tools" (((:file "/Users/idiig/.emacs.d/core/idiig-evil.el") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "before-change-functions" (((:file "/Users/idiig/.emacs.d/core/idiig-evil.el") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "TITLE: " (((:file "/Users/idiig/Nutstore/org-notes/gtd.org") . 1) (org-mode . 2) (nil . 2) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/test.org") . 1)) "~/Nutstore/org-notes/roam-notes/" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 3) ((:keyword "setq") . 4) (emacs-lisp-mode . 4) (nil . 4) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) "Japanese" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/token_waka.org") . 1) (org-mode . 8) (nil . 8) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 7)) "poetic" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/token_waka.org") . 1) (org-mode . 2) (nil . 2) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) "~/Nutstore/bibfolder/bibliography.bib" (((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "which-key-declare-prefixes-for-mode" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1) (emacs-lisp-mode . 1) (nil . 1) ((:keyword "progn") . 1)) "token_lst" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/hds_eval_exp.py") . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) "results" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "setq-default" (((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) "predicting" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1) (nil . 1)) "bibliography" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/test/eeee.org") . 1) ((:symbol "~/Nutstore/bibfolder/bibliography") . 1) (org-mode . 1) (nil . 1)) "pmatrix" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/token_waka.org") . 1) (org-mode . 1) (nil . 1)) "cdots" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/token_waka.org") . 1) (org-mode . 1) (nil . 1)) "mentioned" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1) (nil . 1)) "lsp-mode" (((:file "/Users/idiig/.emacs.d/modules/idiig-prog.el") . 1) ((:keyword "defun") . 1) (emacs-lisp-mode . 1) (nil . 1)) "SourceHanSansSC" (((:file "/Users/idiig/.emacs.d/tmp/draft.tex") . 4) ((:keyword "\\setmainfont") . 3) (latex-mode . 4) (nil . 4) ((:keyword "\\setsansfont") . 1)) ":headers" (((:file "/Users/idiig/emacs-test/test.org") . 1) (org-mode . 1) (nil . 1)) "draft" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "occurence" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/token_waka.org") . 1) (org-mode . 4) (nil . 4) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 3)) "HEADER" (((:file "/Users/idiig/emacs-test/test.org") . 1) (org-mode . 1) (nil . 1)) "input" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "Regular" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 6) ((:file "/Users/idiig/.emacs.d/tmp/draft.tex") . 5) ((:keyword "\\setmainfont") . 3) (latex-mode . 5) ((:keyword "\\setCJKmainfont") . 1) ((:keyword "\\setsansfont") . 1)) "first" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/token_waka.org") . 1) (org-mode . 1) (nil . 1)) "multiple" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1) ((:keyword "return") . 1) (python-mode . 1) (nil . 1)) "between" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/token_waka.org") . 1) (org-mode . 5) (nil . 6) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1) ((:keyword "return") . 1) (python-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 4)) "corpus" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1) ((:keyword "return") . 1) (python-mode . 1) (nil . 3) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 2) (org-mode . 2)) "query_freq(corpus)" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1) ((:keyword "return") . 1) (python-mode . 1) (nil . 1)) "group" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1) ((:keyword "return") . 1) (python-mode . 1) (nil . 1)) "lemma_freq" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1) ((:keyword "return") . 1) (python-mode . 1) (nil . 1)) "default" (((:file "/Users/idiig/.emacs.d/.git/COMMIT_EDITMSG") . 1) (text-mode . 1) (nil . 1)) "formular" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/token_waka.org") . 1) (org-mode . 1) (nil . 1)) "concept_db(vob_db)" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 2) ((:keyword "return") . 1) (python-mode . 2) (nil . 2) ((:keyword "def") . 1)) "~/.emacs.d/.cache/" (((:file "/Users/idiig/.gitignore") . 1) (gitignore-mode . 1)) "database" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1) ((:keyword "return") . 1) (python-mode . 1) (nil . 1)) "mono_voc" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1) ((:keyword "return") . 1) (python-mode . 1) (nil . 1)) "variant" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1) ((:keyword "return") . 1) (python-mode . 1) (nil . 1)) "poetry" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 5) (org-mode . 5) (nil . 5)) "approach" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 3) (org-mode . 3) (nil . 3)) "pdb" (((:file "/Users/idiig/emacs-test/s.py") . 1) (python-mode . 1) (nil . 1)) "resourse" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1) (nil . 1)) "deft-mode-map" (((:keyword "evil-define-key") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "interpretability" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1) (nil . 1)) "Example" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1) (nil . 1)) "vector" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 2) (org-mode . 2) (nil . 2)) "averaged" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1) (nil . 1)) "strength" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1) (nil . 1)) "imformation" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 2) (org-mode . 2) (nil . 2)) "context" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 2) (org-mode . 2) (nil . 2)) "/Users/idiig/.emacs.d/.cache/" ((Custom-mode . 1) (nil . 1)) "calc" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1) (nil . 1)) "composed" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1) (nil . 1)) "~/Nutstore/org-notes/" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 6) ((:keyword "setq") . 6) (emacs-lisp-mode . 7) (nil . 7) ((:keyword "defvar") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) "length" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 2) (org-mode . 2) (nil . 2)) "Menlo" (((:file "/Users/idiig/.emacs.d/core/idiig-ui.el") . 1) ((:keyword "cond") . 1) (emacs-lisp-mode . 1) (nil . 1)) "org-journal-dir" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 2) ((:keyword "setq") . 2) (emacs-lisp-mode . 2) (nil . 2)) "modules" (((:file "/Users/idiig/.emacs.d/.git/COMMIT_EDITMSG") . 1) (text-mode . 1) (nil . 1)) "config" (((:file "/Users/idiig/.emacs.d/.git/COMMIT_EDITMSG") . 4) (text-mode . 4) (nil . 4)) "completion" (((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 2) ((:keyword "setq") . 1) (emacs-lisp-mode . 2) (nil . 2) ((:keyword "use-package") . 1)) "LaTeX-mode" (((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 3) ((:keyword "use-package") . 3) (emacs-lisp-mode . 3) (nil . 3)) "helm-resume" (((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1) ((:keyword "evil-define-key") . 1) (emacs-lisp-mode . 1) (nil . 1)) "bibtex" (((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1) ((:keyword "progn") . 1) (emacs-lisp-mode . 1) (nil . 1)) "~/Nutstore/org-notes/bibnotes/" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "search" (((:file "/Users/idiig/.emacs.d/core/idiig-global-keybindings.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "/Users/idiig/Nutstore/" ((Custom-mode . 1) (nil . 1)) "/Users/idiig/Nutstore/org-notes/" ((Custom-mode . 1) (nil . 1)) "custom" (((:file "/Users/idiig/.emacs.d/.git/COMMIT_EDITMSG") . 1) (text-mode . 1) (nil . 1)) "inbox" (((:file "/Users/idiig/Nutstore/org-notes/inbox.org") . 1) (org-mode . 1) (nil . 1)) "cdlatex" (((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "changes" (((:file "/Users/idiig/.emacs.d/.git/COMMIT_EDITMSG") . 1) (text-mode . 1) (nil . 1)) "citekey" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 2) ((:keyword "function") . 2) (emacs-lisp-mode . 3) (nil . 3) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1) ((:keyword "setq") . 1)) "org-ref-insert-cite-function" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "org-roam-capture" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1) ((:keyword "progn") . 1) (emacs-lisp-mode . 1) (nil . 1)) "keyword" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "right" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "roam" (((:file "/Users/idiig/.emacs.d/.git/COMMIT_EDITMSG") . 1) (text-mode . 1) (nil . 1)) "helm-bibtex" (((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 2) (nil . 2) ((:file "/Users/idiig/.emacs.d/core/idiig-auto-complete.el") . 1) ((:keyword "setq") . 1)) "yasnippet-snippets-dir" (((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 2) ((:keyword "use-package") . 2) (emacs-lisp-mode . 3) (nil . 3) ((:file "/Users/idiig/.emacs.d/core/idiig-auto-complete.el") . 1) ((:keyword "require") . 1)) "bibtex-mode-hook" (((:file "/Users/idiig/.emacs.d/core/idiig-auto-complete.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "concat" (((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1) ((:keyword "function") . 1) (emacs-lisp-mode . 1) (nil . 1)) ":output-dir" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/test.org") . 1) (org-mode . 1) (nil . 1)) "NAME: " (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/test.org") . 2) (org-mode . 2) (nil . 2)) "tidyverse" ((ess-r-mode . 1) (nil . 1)) "rstatix" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/test.org") . 1) (org-mode . 1) (nil . 1)) "PRIORITIES: " (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/test.org") . 1) (org-mode . 1) (nil . 1)) "file" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/test.org") . 1) (org-mode . 1) (nil . 2) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1)) "python" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "japanese" (((:file "/Users/idiig/.emacs.d/.git/COMMIT_EDITMSG") . 1) (text-mode . 1) (nil . 1)) ":results" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/test.org") . 1) (org-mode . 6) (nil . 6) ((:file "/Users/idiig/emacs-test/test.org") . 5)) "org-latex-default-class" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "footnotesize" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "org-latex-default-packages-alist" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "LATEX_HEADER: " (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/token_waka.org") . 1) (org-mode . 4) (nil . 4) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/test/eeee.org") . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) "org-babel-default-header-args:latex" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "period_lst" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/hds_eval_exp.py") . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) ":exports" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 6) ((:file "/Users/idiig/emacs-test/test.org") . 5) (org-mode . 5)) ":file" (((:file "/Users/idiig/emacs-test/test.org") . 1) (org-mode . 2) (nil . 2) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) "image" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "LATEX: " (((:file "/Users/idiig/emacs-test/test.org") . 3) (org-mode . 6) (nil . 6) ((:file "/Users/idiig/emacs-test/test2/ttttt.org") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/test/eeee.org") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) "fontspec" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "model" ((org-mode . 2) (nil . 2) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) "LATEX_CLASS: " (((:file "/Users/idiig/emacs-test/test2/ttttt.org") . 1) (org-mode . 1) (nil . 1)) "def" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/preprocessing.py") . 1) ((:keyword "import") . 1) (python-mode . 10) (nil . 10) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 9) ((:keyword "as") . 7) ((:keyword "return") . 2)) "Nutstore" (((:file "/Users/idiig/emacs-test/test2/ttttt.org") . 1) (org-mode . 2) (nil . 2) ((:file "/Users/idiig/emacs-test/test.org") . 1)) "bibfolder" (((:file "/Users/idiig/emacs-test/test2/ttttt.org") . 1) (org-mode . 2) (nil . 2) ((:file "/Users/idiig/emacs-test/test.org") . 1)) "org-babel-execute:python" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "fig_" (((:file "/Users/idiig/emacs-test/test.org") . 1) (org-mode . 2) (nil . 2) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) "LATEX_HEADER_EXTRA: " (((:file "/Users/idiig/emacs-test/test.org") . 1) (org-mode . 1) (nil . 1)) "print" (((:file "/Users/idiig/emacs-test/test.org") . 1) (org-mode . 1) (nil . 1)) "latex: " (((:file "/Users/idiig/emacs-test/test.org") . 1) (org-mode . 1) (nil . 1)) "other" (((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "export" (((:file "/Users/idiig/emacs-test/test.org") . 1) (org-mode . 1) (nil . 1)) "classification" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 2) ((:keyword "return") . 2) (python-mode . 2) (nil . 2)) "concept" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 2) ((:keyword "return") . 2) (python-mode . 2) (nil . 2)) "res_df" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1) ((:keyword "else") . 1) (python-mode . 1) (nil . 1)) "different" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1) ((:keyword "return") . 1) (python-mode . 1) (nil . 2) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1)) "surface" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1) ((:keyword "return") . 1) (python-mode . 1) (nil . 1)) "computational" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1) (nil . 1)) "entity" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1) (nil . 1)) "studies" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 3) (org-mode . 3) (nil . 3)) "lexical" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 2) (org-mode . 2) (nil . 2)) "expressions" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1) (nil . 1)) "BERT" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 2) (org-mode . 2) (nil . 2)) "learning" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 3) (org-mode . 3) (nil . 3)) "predict" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 2) (org-mode . 2) (nil . 2)) "Hachidaishu" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 3) (org-mode . 3) (nil . 3)) "domain" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1) (nil . 1)) "adaptation" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1) (nil . 1)) "linguistcs" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1) (nil . 1)) "Comparison" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1) (nil . 1)) "deep" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 2) (org-mode . 2) (nil . 2)) "techniques" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1) (nil . 1)) "explore" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1) (nil . 1)) "language" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1) (nil . 1)) "begin" (((:keyword "\\") . 1) (latex-mode . 1) (nil . 1)) "document" (((:keyword "\\usepackage") . 1) (latex-mode . 1) (nil . 1)) "<ex" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1) (nil . 1)) "Examples" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1) (nil . 1)) "relation" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 2) (org-mode . 2) (nil . 2)) "words" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1) (nil . 1)) "based" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 2) (org-mode . 2) (nil . 2)) "occurences" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1) (nil . 1)) "token" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 2) (org-mode . 2) (nil . 2)) "entries" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 2) (org-mode . 2) (nil . 2)) "their" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1) (nil . 1)) "which" (((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1) (org-mode . 1) (nil . 1)))) company-statistics--log [("computational" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("entity" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("studies" (nil . 3) (org-mode . 3) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 3)) ("Japanese" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 7)) ("poetry" (nil . 5) (org-mode . 5) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 5)) ("lexical" (nil . 2) (org-mode . 2) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 2)) ("different" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("expressions" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("BERT" (nil . 2) (org-mode . 2) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 2)) ("learning" (nil . 3) (org-mode . 3) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 3)) ("predict" (nil . 2) (org-mode . 2) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 2)) ("Japanese" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("Hachidaishu" (nil . 3) (org-mode . 3) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 3)) ("domain" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("adaptation" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("linguistcs" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("Japanese" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("poetry" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("Hachidaishu" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("Japanese" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("poetry" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("approach" (nil . 3) (org-mode . 3) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 3)) ("Comparison" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("deep" (nil . 2) (org-mode . 2) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 2)) ("learning" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("predict" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("model" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("predicting" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("BERT" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("techniques" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("explore" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("effectiveness" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("resourse" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("language" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("Japanese" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("poetry" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("lexical" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("studies" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("approach" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("approach" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("method" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("interpretability" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("usepackage" (nil . 1) (latex-mode . 1) ((:keyword "\\") . 1)) ("begin" (nil . 1) (latex-mode . 1) ((:keyword "\\") . 1)) ("document" (nil . 1) (latex-mode . 1) ((:keyword "\\usepackage") . 1)) (":file" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("<ex" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("Examples" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("Japanese" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("poetic" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("relation" (nil . 2) (org-mode . 2) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 2)) ("between" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 4)) ("words" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("based" (nil . 2) (org-mode . 2) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 2)) ("average" (nil . 3) (org-mode . 3) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 3)) ("occurence" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 3)) ("contextual" (nil . 3) (org-mode . 3) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 3)) ("relation" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("between" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("occurence" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("vector" (nil . 2) (org-mode . 2) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 2)) ("fig_" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("Example" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("Japanese" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("relations" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("between" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("based" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("occurences" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("average" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("averaged" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("token" (nil . 2) (org-mode . 2) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 2)) ("token" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("Hachidaishu" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("classic" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("association" (nil . 2) (org-mode . 2) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 2)) ("target" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("vector" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("imformation" (nil . 2) (org-mode . 2) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 2)) ("association" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("strength" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("between" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("entries" (nil . 2) (org-mode . 2) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 2)) ("contextual" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("imformation" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("average" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("semantic" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("context" (nil . 2) (org-mode . 2) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 2)) ("window" (nil . 2) (org-mode . 2) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 2)) ("entries" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("their" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("contextual" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("occurence" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("weight" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("corpus" (nil . 1) (org-mode . 2) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 2)) ("deep" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("learning" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("mentioned" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("which" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("calc" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("composed" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("corpus" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("studies" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("length" (nil . 2) (org-mode . 2) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 2)) ("context" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("window" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("length" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("poetry" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("LATEX: " (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("LATEX_HEADER: " (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("usepackage" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/draft.org") . 1)) ("org-agenda-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("clock" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("schedule" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("deadline" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "setq") . 2) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 2)) ("schedule" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("deadline" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("properties" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("priority" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "setq") . 2) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 2)) ("property" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("priority" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("Menlo" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "cond") . 1) ((:file "/Users/idiig/.emacs.d/core/idiig-ui.el") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) ((:file "/Users/idiig/.emacs.d/core/idiig-ui.el") . 1)) (":hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/core/idiig-ui.el") . 1)) ("org-agenda-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/core/idiig-ui.el") . 1)) (":init" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/core/idiig-ui.el") . 1)) ("progn" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/core/idiig-ui.el") . 1)) ("<ta" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/s.org") . 1)) ("ssss" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/s.org") . 1)) (":after" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/core/idiig-ui.el") . 1)) (":defer" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/core/idiig-ui.el") . 1)) ("keybindings" (nil . 1) (text-mode . 1) ((:file "/Users/idiig/.emacs.d/.git/COMMIT_EDITMSG") . 1)) ("Sans" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/Users/idiig/.emacs.d/core/idiig-ui.el") . 1)) ("org-journal-dir" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "setq") . 2) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 2)) ("~/Nutstore/org-notes/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("org-journal-dir" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("defvar" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("~/Nutstore/org-notes/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defvar") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("modified" (nil . 1) (text-mode . 1) ((:file "/Users/idiig/.emacs.d/.git/COMMIT_EDITMSG") . 1)) ("progn" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("which-key-declare-prefixes-for-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("org-mode-map" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("journal" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("provide" (nil . 1) (emacs-lisp-mode . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("require" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "/Users/idiig/.emacs.d/init.el") . 1)) ("modules" (nil . 1) (text-mode . 1) ((:file "/Users/idiig/.emacs.d/.git/COMMIT_EDITMSG") . 1)) ("config" (nil . 1) (text-mode . 1) ((:file "/Users/idiig/.emacs.d/.git/COMMIT_EDITMSG") . 1)) ("evil-leader/set-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "dolist") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 2)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("function" (nil . 1) (emacs-lisp-mode . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("latexmk" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "if") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("completion" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 2)) (":hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 3)) ("LaTeX-mode" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "use-package") . 2) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 2)) ("completion" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) (":hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("LaTeX-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("lambda" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) (":defer" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("helm-resume" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "evil-define-key") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("bibtex" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("keybindings" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "evil-define-key") . 4) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 4)) ("keybindings" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "evil-define-key") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) (":hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("evil-leader/set-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "evil-define-key") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("evil-leader/set-key-for-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "evil-define-key") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("markdown" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "evil-define-key") . 2) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 2)) ("markdown" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "evil-define-key") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("keybindings" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "evil-define-key") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("keybindings" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "evil-define-key") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) (":after" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) (":hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("LaTeX-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("lambda" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("require" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("auctex-latexmk-setup" (nil . 3) (emacs-lisp-mode . 3) ((:keyword "require") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 3)) (":config" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("progn" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("auctex-latexmk-setup" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 2) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("auctex-latexmk-setup" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("magic-latex-buffer" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("pdf-tools" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/core/idiig-evil.el") . 1)) ("before-change-functions" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/core/idiig-evil.el") . 1)) (":config" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("progn" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("~/Nutstore/org-notes/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("~/Nutstore/org-notes/bibnotes/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("config" (nil . 1) (text-mode . 1) ((:file "/Users/idiig/.emacs.d/.git/COMMIT_EDITMSG") . 1)) ("frac" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/org-notes/journal.org") . 1)) ("/Users/idiig/Nutstore/" (nil . 1) (Custom-mode . 1)) ("/Users/idiig/Nutstore/org-notes/" (nil . 1) (Custom-mode . 1)) ("custom" (nil . 1) (text-mode . 1) ((:file "/Users/idiig/.emacs.d/.git/COMMIT_EDITMSG") . 1)) ("inbox" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/org-notes/inbox.org") . 1)) ("TITLE: " (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/org-notes/gtd.org") . 1)) (":config" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("progn" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("~/Nutstore/org-notes/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("~/Nutstore/org-notes/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("~/Nutstore/org-notes/roam-notes/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("~/Nutstore/org-notes/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("~/Nutstore/org-notes/roam-notes/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) (":defer" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) (":commands" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) (":after" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) (":config" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("progn" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("~/Nutstore/org-notes/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("~/Nutstore/org-notes/roam-notes/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("~/Nutstore/bibfolder/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("~/Nutstore/bibfolder/bibliography.bib" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("cdlatex" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("~/Nutstore/org-notes/roam-notes/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("changes" (nil . 1) (text-mode . 1) ((:file "/Users/idiig/.emacs.d/.git/COMMIT_EDITMSG") . 1)) ("test" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/org-files/research-notes/2021-05-05T2322.org") . 1)) ("keybindings" (nil . 1) (text-mode . 1) ((:file "/Users/idiig/.emacs.d/.git/COMMIT_EDITMSG") . 1)) ("citekey" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "function") . 2) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 2)) ("citekey" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "function") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("citekey" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("progn" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/core/idiig-auto-complete.el") . 1)) ("org-roam-capture" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("keyword" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("right" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("roam" (nil . 1) (text-mode . 1) ((:file "/Users/idiig/.emacs.d/.git/COMMIT_EDITMSG") . 1)) (":hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("lambda" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("require" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("helm-bibtex" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("yasnippet-snippets-dir" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("bibtex-mode-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/core/idiig-auto-complete.el") . 1)) (":hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/core/idiig-auto-complete.el") . 1)) ("lambda" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/core/idiig-auto-complete.el") . 1)) ("concat" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "function") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/core/idiig-auto-complete.el") . 1)) ("yasnippet-snippets-dir" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/core/idiig-auto-complete.el") . 1)) (":after" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/core/idiig-auto-complete.el") . 1)) (":defer" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/core/idiig-auto-complete.el") . 1)) ("helm-bibtex" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/core/idiig-auto-complete.el") . 1)) ("progn" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("require" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) ("yasnippet-snippets-dir" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-tex.el") . 1)) (":output-dir" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/test.org") . 1)) ("NAME: " (nil . 2) (org-mode . 2) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/test.org") . 2)) ("NAME: " (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/test.org") . 1)) ("check" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/test.org") . 1)) ("dplyr" (nil . 1) (ess-r-mode . 1)) ("TITLE: " (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/test.org") . 1)) ("tidyverse" (nil . 1) (ess-r-mode . 1)) ("rstatix" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/test.org") . 1)) ("PRIORITIES: " (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/test.org") . 1)) ("file" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/test.org") . 1)) ("test" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/test.org") . 1)) (":session" (nil . 3) (org-mode . 3) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/test.org") . 3)) (":session" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/test.org") . 1)) (":session" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/test.org") . 1)) (":session" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/test.org") . 1)) (":session" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/test.org") . 1)) (":session" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/test.org") . 1)) ("python" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) (":after" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("config" (nil . 1) (text-mode . 1) ((:file "/Users/idiig/.emacs.d/.git/COMMIT_EDITMSG") . 1)) ("config" (nil . 1) (text-mode . 1) ((:file "/Users/idiig/.emacs.d/.git/COMMIT_EDITMSG") . 1)) ("japanese" (nil . 1) (text-mode . 1) ((:file "/Users/idiig/.emacs.d/.git/COMMIT_EDITMSG") . 1)) (":results" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/test.org") . 1)) ("setq-default" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("org-latex-default-class" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("usepackage" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("footnotesize" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("org-latex-default-packages-alist" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("LATEX_HEADER: " (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/token_waka.org") . 1)) ("usepackage" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("default" (nil . 1) (text-mode . 1) ((:file "/Users/idiig/.emacs.d/.git/COMMIT_EDITMSG") . 1)) ("org-babel-default-header-args:latex" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("file" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) (":init" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) (":exports" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("results" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("usepackage" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 2)) (":config" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("progn" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) (":file" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1)) ("latex" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1)) ("image" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("LATEX: " (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1)) ("modified" (nil . 1) (text-mode . 1) ((:file "/Users/idiig/.emacs.d/.git/COMMIT_EDITMSG") . 1)) ("fontspec" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("model" (nil . 1) (org-mode . 1)) ("progn" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("LATEX_CLASS: " (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test2/ttttt.org") . 1)) ("test" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test2/ttttt.org") . 1)) ("LATEX: " (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test2/ttttt.org") . 1)) ("Nutstore" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test2/ttttt.org") . 1)) ("bibfolder" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test2/ttttt.org") . 1)) ("hyperref" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("LATEX: " (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/test/eeee.org") . 1)) ("LATEX_HEADER: " (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/test/eeee.org") . 1)) ("addbibresource" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/test/eeee.org") . 1)) ("bibliography" (nil . 1) (org-mode . 1) ((:symbol "~/Nutstore/bibfolder/bibliography") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/test/eeee.org") . 1)) ("LATEX: " (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1)) ("LATEX_HEADER: " (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1)) ("usepackage" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1)) ("org-babel-execute:python" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) (":init" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) (":exports" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1)) (":exports" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1)) ("test" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 2)) ("test" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1)) ("fig_" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1)) (":exports" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1)) ("LATEX_HEADER_EXTRA: " (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1)) ("LATEX: " (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1)) ("print" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1)) ("Nutstore" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1)) ("bibfolder" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1)) (":exports" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1)) ("latex: " (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1)) (":results" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) (":after" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) (":commands" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("org-capture" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) (":init" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) (":config" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) (":init" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("progn" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("other" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) (":config" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) (":after" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("progn" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) (":init" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) (":config" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) (":init" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("test" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1)) ("export" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1)) ("latex" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1)) (":headers" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1)) (":exports" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1)) (":results" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1)) (":results" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1)) ("LATEX" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1)) ("HEADER" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1)) ("test" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1)) ("test" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1)) (":results" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1)) (":results" (nil . 1) (org-mode . 1) ((:file "/Users/idiig/emacs-test/test.org") . 1)) ("Regular" (nil . 6) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("input" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("draft" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/idiig/.emacs.d/modules/idiig-org.el") . 1)) ("Regular" (nil . 1) (latex-mode . 5) ((:keyword "\\setmainfont") . 3) ((:file "/Users/idiig/.emacs.d/tmp/draft.tex") . 5)) ("MinionPro" (nil . 2) (latex-mode . 2) ((:keyword "\\setmainfont") . 2) ((:file "/Users/idiig/.emacs.d/tmp/draft.tex") . 2)) ("Regular" (nil . 1) (latex-mode . 1) ((:keyword "\\setCJKmainfont") . 1) ((:file "/Users/idiig/.emacs.d/tmp/draft.tex") . 1)) ("SourceHanSansSC" (nil . 4) (latex-mode . 4) ((:keyword "\\setmainfont") . 3) ((:file "/Users/idiig/.emacs.d/tmp/draft.tex") . 4)) ("SourceHanSerifSC" (nil . 2) (latex-mode . 2) ((:keyword "\\setmainfont") . 2) ((:file "/Users/idiig/.emacs.d/tmp/draft.tex") . 2)) ("SourceHanSansSC" (nil . 1) (latex-mode . 1) ((:keyword "\\setmainfont") . 1) ((:file "/Users/idiig/.emacs.d/tmp/draft.tex") . 1)) ("Regular" (nil . 1) (latex-mode . 1) ((:keyword "\\setmainfont") . 1) ((:file "/Users/idiig/.emacs.d/tmp/draft.tex") . 1)) ("SourceHanSerifSC" (nil . 1) (latex-mode . 1) ((:keyword "\\setmainfont") . 1) ((:file "/Users/idiig/.emacs.d/tmp/draft.tex") . 1)) ("SourceHanSansSC" (nil . 1) (latex-mode . 1) ((:keyword "\\setmainfont") . 1) ((:file "/Users/idiig/.emacs.d/tmp/draft.tex") . 1)) ("Regular" (nil . 1) (latex-mode . 1) ((:keyword "\\setmainfont") . 1) ((:file "/Users/idiig/.emacs.d/tmp/draft.tex") . 1)) ("SourceHanSansSC" (nil . 1) (latex-mode . 1) ((:keyword "\\setsansfont") . 1) ((:file "/Users/idiig/.emacs.d/tmp/draft.tex") . 1)) ("Regular" (nil . 1) (latex-mode . 1) ((:keyword "\\setsansfont") . 1) ((:file "/Users/idiig/.emacs.d/tmp/draft.tex") . 1)) ("MinionPro" (nil . 1) (latex-mode . 1) ((:keyword "\\setmainfont") . 1) ((:file "/Users/idiig/.emacs.d/tmp/draft.tex") . 1)) ("def" (nil . 1) (python-mode . 1) ((:keyword "as") . 7) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 8)) ("def" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1)) ("def" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1)) ("def" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1)) ("def" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1)) ("if" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1)) ("def" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1)) ("def" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1)) ("return" (nil . 3) (python-mode . 3) ((:keyword "print") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 3)) ("def" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1)) ("return" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1)) ("lemma_freq" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1)) ("concept_db(vob_db)" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1)) ("query_freq(corpus)" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1)) ("corpus" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1)) ("database" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1)) ("multiple" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1)) ("return" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1)) ("mono_voc" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1)) ("def" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1)) ("concept_db(vob_db)" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1)) ("classification" (nil . 2) (python-mode . 2) ((:keyword "return") . 2) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 2)) ("type" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1)) ("concept" (nil . 2) (python-mode . 2) ((:keyword "return") . 2) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 2)) ("between" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1)) ("concept" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1)) ("group" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1)) ("transpose(args, copy)" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:symbol "nil") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1)) ("res_df" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1)) ("classification" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1)) ("different" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1)) ("surface" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1)) ("variant" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/obtain_comp_pairs.py") . 1))] company-statistics--index 110)