;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(bibtex-entry-type-history magit-revision-history xref--read-pattern-history counsel-describe-symbol-history face-name-history org-agenda-search-history org-refile-history org-read-date-history ess--completing-hist counsel-imenu-history imenu--history-list pyvenv-workon-history counsel-apropos-history tmm--history TeX-command-history dired-shell-command-history info-lookup-history read-char-history bibtex-key-history org-link--history shell-command-history tex-compile-history org-tags-history read-number-history empty-history helm-grep-ag-history helm-ag--helm-history helm-ag--command-history woman-topic-history regexp-history yes-or-no-p-history minibuffer-history swiper-history counsel-ibuffer-history ivy-history counsel-M-x-history input-method-history evil-ex-history buffer-name-history file-name-history extended-command-history))
(setq magit-revision-history '(#("https://github.com/idiig/org-notes.git" 0 38 (ivy-index 0)) #("master" 0 6 (ivy-index 0)) #("origin/master" 0 13 (ivy-index 0)) #("HEAD" 0 4 (ivy-index 1))))
(setq counsel-describe-symbol-history '(#("resize mini" 0 11 (ivy-index 1)) "resize-mini-windows"))
(setq face-name-history '("org-document-title" "lsp-face-highlight-write" "org-agenda-date-today" "org-document-title" "org-level-1" "minibuffer-prompt" "org-level-2" "org-agenda-date-weekend" "org-agenda-date" "org-agenda-structure" "org-agenda-date-today" "org-agenda-structure"))
(setq org-refile-history '(#("gtd.org/Workspace/" 0 18 (idx 11 ivy-index 1)) "journal.org/2021/2021-05 May/2021-05-05 Wednesday/" "journal.org/2021/2021-05 May/2021-05-05 Wednesday/" "journal.org/2021/2021-05 May/2021-05-05 Wednesday/" "journal.org/2021/2021-05 May/2021-05-05 Wednesday/" "journal.org/2021/2021-05 May/2021-05-05 Wednesday/" "journal.org/2021/2021-05 May/2021-05-05 Wednesday/" "journal.org/2021/2021-05 May/2021-05-05 Wednesday/" "journal.org/2021/2021-05 May/2021-05-05 Wednesday/" "journal.org/2021/2021-05 May/2021-05-05 Wednesday/" #("journal.org/2021/2021-05 May/2021-05-05 Wednesday/" 0 50 (idx 0 ivy-index 1)) #("gtd.org/Work/" 0 13 (idx 7 ivy-index 0)) #("journal.org/" 0 12 (idx 5 ivy-index 6))))
(setq org-read-date-history '("14:00+9    " "13:00    " "12:00    " "19:00    " "    " "13:00    " "14:00+9    " "12:00    " "7:00    " "   " "+2    " "22:00    " "10:00    " "22:00    " "10:20+2    " "19:40+1    " "14:00+9    " "14:00+1    " "18:00    " "14:00+14    " "14:00-20:00    " "20:00    " "   " " .+1d/2d    " "24:00 .+1d/3d    " "19:00    " "1:30-2:00    " "23:00    " "15:00    " "22:00    " "14:00-18:00    " "24:00    " "23:00    " "   " "2021-4-1 12:00    " " 2021-4-30 8:50 + 7d    " "   " "04-29    " "   "))
(setq imenu--history-list '(#("Module" 0 6 (ivy-index 1 idx 0)) #("Variable" 0 8 (ivy-index 2 idx 2))))
(setq pyvenv-workon-history '(#("py38" 0 4 (ivy-index 1))))
(setq tmm--history '("r==>Revert Buffer              s-u" "q==>Quit                   C-x C-c" "p==>Print" "1==>New Frame on Monitor..." "F==>New Frame on Display..." "f==>New Frame              C-x 5 2" "0==>Remove Other Windows     C-x 1" "N==>New Window on Right      C-x 3" "n==>New Window Below         C-x 2" "R==>Recover Crashed Session" "r==>Revert Buffer              s-u" "S==>Save As...             C-x C-w" "s==>Save                   C-x C-s" "c==>Close                C-SPC b d" "i==>Insert File...           C-x i" "d==>Open Directory...        C-x d" "O==>Open File..." "o==>Open Recent" "v==>Visit New File...      C-x C-f"))
(setq TeX-command-history '(#("Clean All" 0 9 (ivy-index 18 idx 18)) #("Dvipdfmx" 0 8 (ivy-index 16 idx 16)) #("LaTeX" 0 5 (ivy-index 0 idx 0))))
(setq org-tags-history '(#("test" 0 4 (ivy-index 0)) #("网课" 0 2 (ivy-index 0)) #("TA" 0 2 (ivy-index 0)) #("q" 0 1 (ivy-index 0))))
(setq helm-ag--helm-history '("yasnippet-" "orb" "multi" "retr" "chrom" "roam-note" "org-files" "org-notes" "roam" "auctex-latexmk-" "latex build" "set leader keys for ma" "set-key-for" "org journal map" "z deft" "org journal" "org roam" "declare" "dec" "declare" "evil-set ini" "dired norma" "evil-leader/set-key-for-mode" "major mode leader" "deft" "transient" "use helm" "winum" "multiple" "declare" "declare SPC" "declare  SPC" "declare SPC" "with" "dired" "cache" "transie" "pyim" "my git" "org clock" "counsel git" "avy" "color green" "which ke" "defh" "golden" "def hy" "global set" "org clock" "lambda in" "which key dec" "idiig/declare-prefix-for-mode" "idiig//lsp-declare-prefixes-for-mode" "evil-leader/set-key-for" "evil-leader/set-key-for-mode" "set key for" "あと" "oCc" "C org cap" "active pro" "bind map" "quelp" "quelpa" "quel" "define key map" "counsel git" "normal" "dired" "eviln" "dired" "hook" "evilnc" "dired" "evil-org-agenda" "evil state" "mode map" ":bind" "evil map" #("evilified-state-evilify-map" 0 27 (fontified t)) "evil state" "occur mode ma" "state evili" "evilified" "declare" "evil-leader/set-key-for-mode" "rainbow " "company box" "idiig" "wgrep" "wgre" "occur" "evil surr" "idiig" "doom-modeline-segment--matches" "normal  state" "leader key set" "evil-leader/set-key" "sak" "evilified" "deft"))
(setq helm-ag--command-history '("spacemacs/helm-file-do-ag" "defun" "idiig" "exec-path" "idiig" "\"ag\"" "ag" "sss" "ag" "manage" "idiig" "e"))
(setq regexp-history '(#(":defer" 0 6 (face font-lock-builtin-face fontified t)) nil nil #("ivy-resume" 0 10 (fontified t)) nil nil #("org-agenda-mode-map" 0 19 (fontified t)) "emacs" #("dotspacemacs-leader-key" 0 23 (face font-lock-variable-name-face fontified t)) "spacemacs" #("org-clock-jump-to-current-clock" 0 30 (fontified t) 30 31 (rear-nonsticky t fontified t)) "idiig" nil nil nil nil nil nil "idiig" #("modules/idiig-org" 0 17 (read-only t rear-nonsticky t front-sticky t face font-lock-function-name-face intangible t)) #("idiig/org-setup-evil-surround" 0 29 (fontified t face font-lock-function-name-face)) nil "evil" nil "win" nil "\\+RESULTS" "\\+RESULTS" "\\+RESULTS" "\\+RESULTS" #("idiig-r" 0 7 (fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("idiig-r" 0 7 (fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("idiig-r" 0 7 (fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("spac" 0 4 (ivy-index 0)) "spac" "PPMI" "mathbf" "mathbf" nil nil nil nil "bibliography{test\\.bib}" "bib" "bib" nil #("org-latex-compiler" 0 18 (face font-lock-comment-face fontified t)) "(with-eval-after-load \"ox-latex\"
  (add-to-list 'org-latex-classes
               '(\"bxjsarticle\"
                 \"
\\\\documentclass[xelatex,dvi=dvipdfmx,11pt,ja=standard]{bxjsarticle}
\\\\usepackage{amsmath}
\\\\usepackage{graphicx}
\\\\usepackage[T1]{fontenc}
\\\\usepackage{geometry}
\\\\geometry{a4paper,left=20mm,right=20mm,top=8mm,bottom=12mm,heightrounded}
\\\\usepackage{subcaption}
\\\\usepackage{otf}
\\\\usepackage[yyyymmdd]{datetime}
\\\\renewcommand{\\\\dateseparator}{/}
\\\\usepackage{longtable}
\\\\usepackage{float}
\\\\usepackage{wrapfig}
\\\\usepackage{rotating}
\\\\usepackage[normalem]{ulem}
\\\\usepackage{textcomp}
\\\\usepackage{multicol}
\\\\usepackage{marvosym}
\\\\usepackage{wasysym}
\\\\usepackage{amssymb}
\\\\usepackage{booktabs}
\\\\tolerance=1000
\\\\usepackage{xcolor}
\\\\usepackage{hyperref}
\\\\ifdefined\\\\kanjiskip
  \\\\usepackage{pxjahyper}
  \\\\hypersetup{colorlinks=true,citecolor=blue}
\\\\else
  \\\\ifdefined\\\\XeTeXversion
      \\\\hypersetup{colorlinks=true,citecolor=blue}
  \\\\else
    \\\\ifdefined\\\\directlua
      \\\\hypersetup{pdfencoding=auto,colorlinks=true,citecolor=blue}
    \\\\else
      \\\\hypersetup{unicode,colorlinks=true,citecolor=blue}
    \\\\fi
  \\\\fi
\\\\fi
%
\\\\usepackage{tikz}
\\\\usepackage[authoryear]{natbib}
\\\\bibpunct[: ]{(}{)}{,}{a}{}{,}
\\\\usepackage{url}
%
\\\\usepackage{listings}
\\\\lstset{
basicstyle=\\\\small\\\\ttfamily,
numbers=left,
numberstyle=\\\\footnotesize,
stepnumber=1,
numbersep=5pt,
backgroundcolor=\\\\color{white},
showspaces=false,
showstringspaces=false,
showtabs=false,
frame=tb,
tabsize=2,
captionpos=b,
breaklines=true,
breakatwhitespace=false,
escapeinside={\\\\%*}{*)} 
}
%
\\\\usepackage{etoolbox}
\\\\makeatletter
\\\\patchcmd{\\\\@verbatim}
  {\\\\verbatim@font}
  {\\\\verbatim@font\\\\small}
  {}{}
\\\\makeatother
%
% Footnote setting
\\\\usepackage{footmisc}
\\\\DefineFNsymbols{mySymbols}{{\\\\ensuremath\\\\dagger}{\\\\ensuremath\\\\ddagger}\\\\S\\\\P
   *{**}{\\\\ensuremath{\\\\dagger\\\\dagger}}{\\\\ensuremath{\\\\ddagger\\\\ddagger}}}
\\\\setfnsymbol{mySymbols}
\\\\renewcommand{\\\\thefootnote}{\\\\arabic{footnote}\\\\enspace}
%
\\\\usepackage{fancyhdr}
\\\\pagestyle{fancyplain}
\\\\fancyhf{}
\\\\chead{\\\\fancyplain{}{\\\\jobname}}
\\\\lhead{\\\\fancyplain{}{\\\\today\\\\enspace\\\\currenttime}}
\\\\rhead{\\\\fancyplain{}{\\\\includegraphics[width=0.2\\\\textwidth]{/Users/idiig/Nutstore/tex_related/tokyotechmark.eps}}}
\\\\cfoot{\\\\fancyplain{}{\\\\thepage}}
%
\\\\usepackage{caption}
\\\\captionsetup[figure]{labelfont={bf}, labelsep=colon, justification=raggedright, format=hang}
\\\\captionsetup[table]{labelfont={bf}, labelsep=colon, justification=raggedright, format=hang}
%
\\\\usepackage{framed}
\\\\renewenvironment{quote}[1][\\\\hsize]
{%
  \\\\def\\\\FrameCommand
  {%
    {\\\\color{gray}\\\\vrule width 4pt}%
    \\\\hspace{0pt}%must no space.
    \\\\fboxsep=\\\\FrameSep\\\\colorbox{white}%
  }%
  \\\\MakeFramed{\\\\hsize#1\\\\advance\\\\hsize-\\\\width\\\\FrameRestore}%
}
{\\\\endMakeFramed}
%
\\\\makeatletter
\\\\renewcommand{\\\\maketitle}{\\\\bgroup\\\\setlength{\\\\parindent}{0pt}
\\\\begin{flushleft}
  \\\\ \\\\\\\\
  \\\\vspace{-0.5em}
  \\\\Large{\\\\textsf{\\\\@title}}\\\\\\\\
  \\\\normalsize\\\\@author
\\\\end{flushleft}\\\\egroup
\\\\vspace{-1em}
}
\\\\makeatother
\"
                 (\"\\\\section{%s}\" . \"\\\\section*{%s}\")
                 (\"\\\\subsection{%s}\" . \"\\\\subsection*{%s}\")
                 (\"\\\\subsubsection{%s}\" . \"\\\\subsubsection*{%s}\")
                 (\"\\\\paragraph{%s}\" . \"\\\\paragraph*{%s}\")
                 (\"\\\\subparagraph{%s}\" . \"\\\\subparagraph*{%s}\"))))" "d-to-" nil nil #("idiig-core" 0 10 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t)) #("C-r" 0 3 (face font-lock-string-face fontified t)) nil #("spacemacs" 0 9 (ivy-index 3)) nil "sa" #("ve" 0 2 (ivy-index 0)) #("defvar" 0 6 (face font-lock-keyword-face fontified t)) #("defvar" 0 6 (face font-lock-keyword-face fontified t)) #("1" 0 1 (face underline read-only t)) #("aluation" 0 8 (help-echo "mouse-1: call ivy-action" mouse-face highlight face font-lock-comment-face fontified t)) #("ve" 0 2 (ivy-index 6)) "ve" "ev" #("To" 0 2 (face font-lock-comment-face fontified t)) #("To" 0 2 (face font-lock-comment-face fontified t)) #("To" 0 2 (fontified t face font-lock-comment-face)) #("To" 0 2 (face font-lock-comment-face fontified t)) #("create" 0 6 (face font-lock-comment-face fontified t)) #("create" 0 6 (face font-lock-comment-face fontified t)) #("This" 0 4 (face font-lock-comment-face fontified t)) #("enter" 0 5 (fontified t face font-lock-comment-face)) #("create" 0 6 (fontified t face font-lock-comment-face)) #("buffer" 0 6 (fontified t face font-lock-comment-face)) #("This" 0 4 (face font-lock-comment-face fontified t)) #("buffer" 0 6 (fontified t face font-lock-comment-face)) #("buffer" 0 6 (fontified t face font-lock-comment-face)) #("create" 0 6 (fontified t face font-lock-comment-face)) nil #("is" 0 2 (face font-lock-comment-face fontified t)) #("is" 0 2 (face font-lock-comment-face fontified t)) #("buffer" 0 6 (fontified t face font-lock-comment-face)) #("This" 0 4 (face font-lock-comment-face fontified t)) #("use-package" 0 8 (fontified t face font-lock-keyword-face) 8 11 (fontified t face font-lock-keyword-face)) #("use-package" 0 8 (fontified t face font-lock-keyword-face) 8 11 (fontified t face font-lock-keyword-face)) nil #("evil-leader/set-key" 0 19 (fontified t)) #("global-set-key" 0 14 (fontified t)) #("global-set-key" 0 14 (fontified t)) nil #("global-set-key" 0 14 (fontified t)) "global-set-key" "global" #("iedit" 0 5 (fontified t face font-lock-constant-face)) nil #("ivy" 0 3 (fontified t face font-lock-comment-face)) #("To" 0 2 (fontified t face font-lock-comment-face)) "e" #("map" 0 3 (fontified t face font-lock-comment-face)) "e" nil "glo" "thing" nil "re" "r" nil "t"))
(setq yes-or-no-p-history '("yes" "yeas" "yes" "tes" "yes" "tes" "yes" "no" "yes"))
(setq minibuffer-history '("10" "i" "idiig" "test 3" "test 2" "test" #("yasuoka_koten_2018" 0 17 (font-lock-multiline t htmlize-link (:uri "citep:yasuoka_koten_2018") help-echo (lambda (window object position) (when org-ref-show-citation-on-enter (save-excursion (goto-char position) (let ((s (org-ref-format-entry (org-ref-get-bibtex-key-under-cursor)))) (with-temp-buffer (insert s) (fill-paragraph) (buffer-string)))))) keymap (keymap (tab lambda nil (interactive) (funcall org-ref-insert-cite-function)) (S-up . org-ref-sort-citation-link) (S-right lambda nil (interactive) (org-ref-swap-citation-link 1)) (S-left lambda nil (interactive) (org-ref-swap-citation-link -1)) (C-right . org-ref-next-key) (C-left . org-ref-previous-key) (16777337 lambda nil "Paste key at point. Assumes the first thing in the killring is a key." (interactive) (org-ref-insert-key-at-point (car kill-ring))) (16777303 lambda nil "Copy all the keys at point." (interactive) (kill-new (org-element-property :path (org-element-context)))) (16777335 lambda nil (interactive) (kill-new (car (org-ref-get-bibtex-key-and-file)))) (16777318 lambda nil (interactive) (save-excursion (org-ref-open-citation-at-point) (kill-new (org-ref-format-bibtex-entry-at-point)))) (16777319 . org-ref-google-scholar-at-point) (16777317 lambda nil "Email entry at point" (interactive) (org-ref-open-citation-at-point) (org-ref-email-bibtex-entry)) (16777315 . org-ref-wos-citing-at-point) (16777330 . org-ref-wos-related-at-point) (16777326 . org-ref-open-notes-at-point) (16777328 lambda nil (interactive) (funcall org-ref-open-pdf-function)) (16777333 . org-ref-open-url-at-point) (16777314 . org-ref-open-citation-at-point) (16777327 . org-ref-cite-hydra/body) (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-ref-cite-face fontified t) 17 18 (font-lock-multiline t htmlize-link (:uri "citep:yasuoka_koten_2018") help-echo (lambda (window object position) (when org-ref-show-citation-on-enter (save-excursion (goto-char position) (let ((s (org-ref-format-entry (org-ref-get-bibtex-key-under-cursor)))) (with-temp-buffer (insert s) (fill-paragraph) (buffer-string)))))) keymap (keymap (tab lambda nil (interactive) (funcall org-ref-insert-cite-function)) (S-up . org-ref-sort-citation-link) (S-right lambda nil (interactive) (org-ref-swap-citation-link 1)) (S-left lambda nil (interactive) (org-ref-swap-citation-link -1)) (C-right . org-ref-next-key) (C-left . org-ref-previous-key) (16777337 lambda nil "Paste key at point. Assumes the first thing in the killring is a key." (interactive) (org-ref-insert-key-at-point (car kill-ring))) (16777303 lambda nil "Copy all the keys at point." (interactive) (kill-new (org-element-property :path (org-element-context)))) (16777335 lambda nil (interactive) (kill-new (car (org-ref-get-bibtex-key-and-file)))) (16777318 lambda nil (interactive) (save-excursion (org-ref-open-citation-at-point) (kill-new (org-ref-format-bibtex-entry-at-point)))) (16777319 . org-ref-google-scholar-at-point) (16777317 lambda nil "Email entry at point" (interactive) (org-ref-open-citation-at-point) (org-ref-email-bibtex-entry)) (16777315 . org-ref-wos-citing-at-point) (16777330 . org-ref-wos-related-at-point) (16777326 . org-ref-open-notes-at-point) (16777328 lambda nil (interactive) (funcall org-ref-open-pdf-function)) (16777333 . org-ref-open-url-at-point) (16777314 . org-ref-open-citation-at-point) (16777327 . org-ref-cite-hydra/body) (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-ref-cite-face rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t)) "test" #("yasuoka_koten_2018" 0 17 (fontified t face org-ref-cite-face mouse-face highlight keymap (keymap (tab lambda nil (interactive) (funcall org-ref-insert-cite-function)) (S-up . org-ref-sort-citation-link) (S-right lambda nil (interactive) (org-ref-swap-citation-link 1)) (S-left lambda nil (interactive) (org-ref-swap-citation-link -1)) (C-right . org-ref-next-key) (C-left . org-ref-previous-key) (16777337 lambda nil "Paste key at point. Assumes the first thing in the killring is a key." (interactive) (org-ref-insert-key-at-point (car kill-ring))) (16777303 lambda nil "Copy all the keys at point." (interactive) (kill-new (org-element-property :path (org-element-context)))) (16777335 lambda nil (interactive) (kill-new (car (org-ref-get-bibtex-key-and-file)))) (16777318 lambda nil (interactive) (save-excursion (org-ref-open-citation-at-point) (kill-new (org-ref-format-bibtex-entry-at-point)))) (16777319 . org-ref-google-scholar-at-point) (16777317 lambda nil "Email entry at point" (interactive) (org-ref-open-citation-at-point) (org-ref-email-bibtex-entry)) (16777315 . org-ref-wos-citing-at-point) (16777330 . org-ref-wos-related-at-point) (16777326 . org-ref-open-notes-at-point) (16777328 lambda nil (interactive) (funcall org-ref-open-pdf-function)) (16777333 . org-ref-open-url-at-point) (16777314 . org-ref-open-citation-at-point) (16777327 . org-ref-cite-hydra/body) (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo (lambda (window object position) (when org-ref-show-citation-on-enter (save-excursion (goto-char position) (let ((s (org-ref-format-entry (org-ref-get-bibtex-key-under-cursor)))) (with-temp-buffer (insert s) (fill-paragraph) (buffer-string)))))) htmlize-link (:uri "citep:yasuoka_koten_2018") font-lock-multiline t) 17 18 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-ref-cite-face mouse-face highlight keymap (keymap (tab lambda nil (interactive) (funcall org-ref-insert-cite-function)) (S-up . org-ref-sort-citation-link) (S-right lambda nil (interactive) (org-ref-swap-citation-link 1)) (S-left lambda nil (interactive) (org-ref-swap-citation-link -1)) (C-right . org-ref-next-key) (C-left . org-ref-previous-key) (16777337 lambda nil "Paste key at point. Assumes the first thing in the killring is a key." (interactive) (org-ref-insert-key-at-point (car kill-ring))) (16777303 lambda nil "Copy all the keys at point." (interactive) (kill-new (org-element-property :path (org-element-context)))) (16777335 lambda nil (interactive) (kill-new (car (org-ref-get-bibtex-key-and-file)))) (16777318 lambda nil (interactive) (save-excursion (org-ref-open-citation-at-point) (kill-new (org-ref-format-bibtex-entry-at-point)))) (16777319 . org-ref-google-scholar-at-point) (16777317 lambda nil "Email entry at point" (interactive) (org-ref-open-citation-at-point) (org-ref-email-bibtex-entry)) (16777315 . org-ref-wos-citing-at-point) (16777330 . org-ref-wos-related-at-point) (16777326 . org-ref-open-notes-at-point) (16777328 lambda nil (interactive) (funcall org-ref-open-pdf-function)) (16777333 . org-ref-open-url-at-point) (16777314 . org-ref-open-citation-at-point) (16777327 . org-ref-cite-hydra/body) (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo (lambda (window object position) (when org-ref-show-citation-on-enter (save-excursion (goto-char position) (let ((s (org-ref-format-entry (org-ref-get-bibtex-key-under-cursor)))) (with-temp-buffer (insert s) (fill-paragraph) (buffer-string)))))) htmlize-link (:uri "citep:yasuoka_koten_2018") font-lock-multiline t)) #("rudzka-ostyn_cognitive_1988" 0 19 (fontified t help-echo (lambda (window object position) (when org-ref-show-citation-on-enter (save-excursion (goto-char position) (let ((s (org-ref-format-entry (org-ref-get-bibtex-key-under-cursor)))) (with-temp-buffer (insert s) (fill-paragraph) (buffer-string)))))) htmlize-link (:uri "citep:rudzka-ostyn_cognitive_1988") face org-ref-cite-face mouse-face highlight keymap (keymap (tab lambda nil (interactive) (funcall org-ref-insert-cite-function)) (S-up . org-ref-sort-citation-link) (S-right lambda nil (interactive) (org-ref-swap-citation-link 1)) (S-left lambda nil (interactive) (org-ref-swap-citation-link -1)) (C-right . org-ref-next-key) (C-left . org-ref-previous-key) (16777337 lambda nil "Paste key at point. Assumes the first thing in the killring is a key." (interactive) (org-ref-insert-key-at-point (car kill-ring))) (16777303 lambda nil "Copy all the keys at point." (interactive) (kill-new (org-element-property :path (org-element-context)))) (16777335 lambda nil (interactive) (kill-new (car (org-ref-get-bibtex-key-and-file)))) (16777318 lambda nil (interactive) (save-excursion (org-ref-open-citation-at-point) (kill-new (org-ref-format-bibtex-entry-at-point)))) (16777319 . org-ref-google-scholar-at-point) (16777317 lambda nil "Email entry at point" (interactive) (org-ref-open-citation-at-point) (org-ref-email-bibtex-entry)) (16777315 . org-ref-wos-citing-at-point) (16777330 . org-ref-wos-related-at-point) (16777326 . org-ref-open-notes-at-point) (16777328 lambda nil (interactive) (funcall org-ref-open-pdf-function)) (16777333 . org-ref-open-url-at-point) (16777314 . org-ref-open-citation-at-point) (16777327 . org-ref-cite-hydra/body) (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 19 26 (fontified t help-echo (lambda (window object position) (when org-ref-show-citation-on-enter (save-excursion (goto-char position) (let ((s (org-ref-format-entry (org-ref-get-bibtex-key-under-cursor)))) (with-temp-buffer (insert s) (fill-paragraph) (buffer-string)))))) htmlize-link (:uri "citep:rudzka-ostyn_cognitive_1988") face org-ref-cite-face mouse-face highlight keymap (keymap (tab lambda nil (interactive) (funcall org-ref-insert-cite-function)) (S-up . org-ref-sort-citation-link) (S-right lambda nil (interactive) (org-ref-swap-citation-link 1)) (S-left lambda nil (interactive) (org-ref-swap-citation-link -1)) (C-right . org-ref-next-key) (C-left . org-ref-previous-key) (16777337 lambda nil "Paste key at point. Assumes the first thing in the killring is a key." (interactive) (org-ref-insert-key-at-point (car kill-ring))) (16777303 lambda nil "Copy all the keys at point." (interactive) (kill-new (org-element-property :path (org-element-context)))) (16777335 lambda nil (interactive) (kill-new (car (org-ref-get-bibtex-key-and-file)))) (16777318 lambda nil (interactive) (save-excursion (org-ref-open-citation-at-point) (kill-new (org-ref-format-bibtex-entry-at-point)))) (16777319 . org-ref-google-scholar-at-point) (16777317 lambda nil "Email entry at point" (interactive) (org-ref-open-citation-at-point) (org-ref-email-bibtex-entry)) (16777315 . org-ref-wos-citing-at-point) (16777330 . org-ref-wos-related-at-point) (16777326 . org-ref-open-notes-at-point) (16777328 lambda nil (interactive) (funcall org-ref-open-pdf-function)) (16777333 . org-ref-open-url-at-point) (16777314 . org-ref-open-citation-at-point) (16777327 . org-ref-cite-hydra/body) (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 26 27 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) help-echo (lambda (window object position) (when org-ref-show-citation-on-enter (save-excursion (goto-char position) (let ((s (org-ref-format-entry (org-ref-get-bibtex-key-under-cursor)))) (with-temp-buffer (insert s) (fill-paragraph) (buffer-string)))))) htmlize-link (:uri "citep:rudzka-ostyn_cognitive_1988") face org-ref-cite-face mouse-face highlight keymap (keymap (tab lambda nil (interactive) (funcall org-ref-insert-cite-function)) (S-up . org-ref-sort-citation-link) (S-right lambda nil (interactive) (org-ref-swap-citation-link 1)) (S-left lambda nil (interactive) (org-ref-swap-citation-link -1)) (C-right . org-ref-next-key) (C-left . org-ref-previous-key) (16777337 lambda nil "Paste key at point. Assumes the first thing in the killring is a key." (interactive) (org-ref-insert-key-at-point (car kill-ring))) (16777303 lambda nil "Copy all the keys at point." (interactive) (kill-new (org-element-property :path (org-element-context)))) (16777335 lambda nil (interactive) (kill-new (car (org-ref-get-bibtex-key-and-file)))) (16777318 lambda nil (interactive) (save-excursion (org-ref-open-citation-at-point) (kill-new (org-ref-format-bibtex-entry-at-point)))) (16777319 . org-ref-google-scholar-at-point) (16777317 lambda nil "Email entry at point" (interactive) (org-ref-open-citation-at-point) (org-ref-email-bibtex-entry)) (16777315 . org-ref-wos-citing-at-point) (16777330 . org-ref-wos-related-at-point) (16777326 . org-ref-open-notes-at-point) (16777328 lambda nil (interactive) (funcall org-ref-open-pdf-function)) (16777333 . org-ref-open-url-at-point) (16777314 . org-ref-open-citation-at-point) (16777327 . org-ref-cite-hydra/body) (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t)) "no" #("rudzka-ostyn_cognitive_1988" 0 26 (font-lock-multiline t htmlize-link (:uri "citep:rudzka-ostyn_cognitive_1988") help-echo (lambda (window object position) (when org-ref-show-citation-on-enter (save-excursion (goto-char position) (let ((s (org-ref-format-entry (org-ref-get-bibtex-key-under-cursor)))) (with-temp-buffer (insert s) (fill-paragraph) (buffer-string)))))) keymap (keymap (tab lambda nil (interactive) (funcall org-ref-insert-cite-function)) (S-up . org-ref-sort-citation-link) (S-right lambda nil (interactive) (org-ref-swap-citation-link 1)) (S-left lambda nil (interactive) (org-ref-swap-citation-link -1)) (C-right . org-ref-next-key) (C-left . org-ref-previous-key) (16777337 lambda nil "Paste key at point. Assumes the first thing in the killring is a key." (interactive) (org-ref-insert-key-at-point (car kill-ring))) (16777303 lambda nil "Copy all the keys at point." (interactive) (kill-new (org-element-property :path (org-element-context)))) (16777335 lambda nil (interactive) (kill-new (car (org-ref-get-bibtex-key-and-file)))) (16777318 lambda nil (interactive) (save-excursion (org-ref-open-citation-at-point) (kill-new (org-ref-format-bibtex-entry-at-point)))) (16777319 . org-ref-google-scholar-at-point) (16777317 lambda nil "Email entry at point" (interactive) (org-ref-open-citation-at-point) (org-ref-email-bibtex-entry)) (16777315 . org-ref-wos-citing-at-point) (16777330 . org-ref-wos-related-at-point) (16777326 . org-ref-open-notes-at-point) (16777328 lambda nil (interactive) (funcall org-ref-open-pdf-function)) (16777333 . org-ref-open-url-at-point) (16777314 . org-ref-open-citation-at-point) (16777327 . org-ref-cite-hydra/body) (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-ref-cite-face fontified t) 26 27 (font-lock-multiline t htmlize-link (:uri "citep:rudzka-ostyn_cognitive_1988") help-echo (lambda (window object position) (when org-ref-show-citation-on-enter (save-excursion (goto-char position) (let ((s (org-ref-format-entry (org-ref-get-bibtex-key-under-cursor)))) (with-temp-buffer (insert s) (fill-paragraph) (buffer-string)))))) keymap (keymap (tab lambda nil (interactive) (funcall org-ref-insert-cite-function)) (S-up . org-ref-sort-citation-link) (S-right lambda nil (interactive) (org-ref-swap-citation-link 1)) (S-left lambda nil (interactive) (org-ref-swap-citation-link -1)) (C-right . org-ref-next-key) (C-left . org-ref-previous-key) (16777337 lambda nil "Paste key at point. Assumes the first thing in the killring is a key." (interactive) (org-ref-insert-key-at-point (car kill-ring))) (16777303 lambda nil "Copy all the keys at point." (interactive) (kill-new (org-element-property :path (org-element-context)))) (16777335 lambda nil (interactive) (kill-new (car (org-ref-get-bibtex-key-and-file)))) (16777318 lambda nil (interactive) (save-excursion (org-ref-open-citation-at-point) (kill-new (org-ref-format-bibtex-entry-at-point)))) (16777319 . org-ref-google-scholar-at-point) (16777317 lambda nil "Email entry at point" (interactive) (org-ref-open-citation-at-point) (org-ref-email-bibtex-entry)) (16777315 . org-ref-wos-citing-at-point) (16777330 . org-ref-wos-related-at-point) (16777326 . org-ref-open-notes-at-point) (16777328 lambda nil (interactive) (funcall org-ref-open-pdf-function)) (16777333 . org-ref-open-url-at-point) (16777314 . org-ref-open-citation-at-point) (16777327 . org-ref-cite-hydra/body) (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-ref-cite-face rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t)) #("heylen_looking_2012" 0 19 (font-lock-multiline t htmlize-link (:uri "citep:schutze_automatic_1998,heylen_looking_2012,heylen_monitoring_2015") help-echo (lambda (window object position) (when org-ref-show-citation-on-enter (save-excursion (goto-char position) (let ((s (org-ref-format-entry (org-ref-get-bibtex-key-under-cursor)))) (with-temp-buffer (insert s) (fill-paragraph) (buffer-string)))))) keymap (keymap (tab lambda nil (interactive) (funcall org-ref-insert-cite-function)) (S-up . org-ref-sort-citation-link) (S-right lambda nil (interactive) (org-ref-swap-citation-link 1)) (S-left lambda nil (interactive) (org-ref-swap-citation-link -1)) (C-right . org-ref-next-key) (C-left . org-ref-previous-key) (16777337 lambda nil "Paste key at point. Assumes the first thing in the killring is a key." (interactive) (org-ref-insert-key-at-point (car kill-ring))) (16777303 lambda nil "Copy all the keys at point." (interactive) (kill-new (org-element-property :path (org-element-context)))) (16777335 lambda nil (interactive) (kill-new (car (org-ref-get-bibtex-key-and-file)))) (16777318 lambda nil (interactive) (save-excursion (org-ref-open-citation-at-point) (kill-new (org-ref-format-bibtex-entry-at-point)))) (16777319 . org-ref-google-scholar-at-point) (16777317 lambda nil "Email entry at point" (interactive) (org-ref-open-citation-at-point) (org-ref-email-bibtex-entry)) (16777315 . org-ref-wos-citing-at-point) (16777330 . org-ref-wos-related-at-point) (16777326 . org-ref-open-notes-at-point) (16777328 lambda nil (interactive) (funcall org-ref-open-pdf-function)) (16777333 . org-ref-open-url-at-point) (16777314 . org-ref-open-citation-at-point) (16777327 . org-ref-cite-hydra/body) (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-ref-cite-face org-category "token_waka" fontified t)) "3" #("heylen_looking_2012" 0 19 (fontified t org-category "token_waka" face org-ref-cite-face mouse-face highlight keymap (keymap (tab lambda nil (interactive) (funcall org-ref-insert-cite-function)) (S-up . org-ref-sort-citation-link) (S-right lambda nil (interactive) (org-ref-swap-citation-link 1)) (S-left lambda nil (interactive) (org-ref-swap-citation-link -1)) (C-right . org-ref-next-key) (C-left . org-ref-previous-key) (16777337 lambda nil "Paste key at point. Assumes the first thing in the killring is a key." (interactive) (org-ref-insert-key-at-point (car kill-ring))) (16777303 lambda nil "Copy all the keys at point." (interactive) (kill-new (org-element-property :path (org-element-context)))) (16777335 lambda nil (interactive) (kill-new (car (org-ref-get-bibtex-key-and-file)))) (16777318 lambda nil (interactive) (save-excursion (org-ref-open-citation-at-point) (kill-new (org-ref-format-bibtex-entry-at-point)))) (16777319 . org-ref-google-scholar-at-point) (16777317 lambda nil "Email entry at point" (interactive) (org-ref-open-citation-at-point) (org-ref-email-bibtex-entry)) (16777315 . org-ref-wos-citing-at-point) (16777330 . org-ref-wos-related-at-point) (16777326 . org-ref-open-notes-at-point) (16777328 lambda nil (interactive) (funcall org-ref-open-pdf-function)) (16777333 . org-ref-open-url-at-point) (16777314 . org-ref-open-citation-at-point) (16777327 . org-ref-cite-hydra/body) (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo (lambda (window object position) (when org-ref-show-citation-on-enter (save-excursion (goto-char position) (let ((s (org-ref-format-entry (org-ref-get-bibtex-key-under-cursor)))) (with-temp-buffer (insert s) (fill-paragraph) (buffer-string)))))) htmlize-link (:uri "citep:schutze_automatic_1998,heylen_looking_2012,heylen_monitoring_2015") font-lock-multiline t)) #("yamamoto_utakotoba_2006" 0 23 (fontified t org-category "token_waka" face org-ref-cite-face mouse-face highlight keymap (keymap (tab lambda nil (interactive) (funcall org-ref-insert-cite-function)) (S-up . org-ref-sort-citation-link) (S-right lambda nil (interactive) (org-ref-swap-citation-link 1)) (S-left lambda nil (interactive) (org-ref-swap-citation-link -1)) (C-right . org-ref-next-key) (C-left . org-ref-previous-key) (16777337 lambda nil "Paste key at point. Assumes the first thing in the killring is a key." (interactive) (org-ref-insert-key-at-point (car kill-ring))) (16777303 lambda nil "Copy all the keys at point." (interactive) (kill-new (org-element-property :path (org-element-context)))) (16777335 lambda nil (interactive) (kill-new (car (org-ref-get-bibtex-key-and-file)))) (16777318 lambda nil (interactive) (save-excursion (org-ref-open-citation-at-point) (kill-new (org-ref-format-bibtex-entry-at-point)))) (16777319 . org-ref-google-scholar-at-point) (16777317 lambda nil "Email entry at point" (interactive) (org-ref-open-citation-at-point) (org-ref-email-bibtex-entry)) (16777315 . org-ref-wos-citing-at-point) (16777330 . org-ref-wos-related-at-point) (16777326 . org-ref-open-notes-at-point) (16777328 lambda nil (interactive) (funcall org-ref-open-pdf-function)) (16777333 . org-ref-open-url-at-point) (16777314 . org-ref-open-citation-at-point) (16777327 . org-ref-cite-hydra/body) (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo (lambda (window object position) (when org-ref-show-citation-on-enter (save-excursion (goto-char position) (let ((s (org-ref-format-entry (org-ref-get-bibtex-key-under-cursor)))) (with-temp-buffer (insert s) (fill-paragraph) (buffer-string)))))) htmlize-link (:uri "citep:yamamoto_utakotoba_2006,yamamoto_modeling_2007,yamamoto_hachidaishu_2010") font-lock-multiline t)) "no" #("schutze_automatic_1998" 0 22 (fontified t org-category "token_waka" help-echo (lambda (window object position) (when org-ref-show-citation-on-enter (save-excursion (goto-char position) (let ((s (org-ref-format-entry (org-ref-get-bibtex-key-under-cursor)))) (with-temp-buffer (insert s) (fill-paragraph) (buffer-string)))))) htmlize-link (:uri "citep:schutze_automatic_1998,heylen_looking_2012,heylen_monitoring_2015") face org-ref-cite-face mouse-face highlight keymap (keymap (tab lambda nil (interactive) (funcall org-ref-insert-cite-function)) (S-up . org-ref-sort-citation-link) (S-right lambda nil (interactive) (org-ref-swap-citation-link 1)) (S-left lambda nil (interactive) (org-ref-swap-citation-link -1)) (C-right . org-ref-next-key) (C-left . org-ref-previous-key) (16777337 lambda nil "Paste key at point. Assumes the first thing in the killring is a key." (interactive) (org-ref-insert-key-at-point (car kill-ring))) (16777303 lambda nil "Copy all the keys at point." (interactive) (kill-new (org-element-property :path (org-element-context)))) (16777335 lambda nil (interactive) (kill-new (car (org-ref-get-bibtex-key-and-file)))) (16777318 lambda nil (interactive) (save-excursion (org-ref-open-citation-at-point) (kill-new (org-ref-format-bibtex-entry-at-point)))) (16777319 . org-ref-google-scholar-at-point) (16777317 lambda nil "Email entry at point" (interactive) (org-ref-open-citation-at-point) (org-ref-email-bibtex-entry)) (16777315 . org-ref-wos-citing-at-point) (16777330 . org-ref-wos-related-at-point) (16777326 . org-ref-open-notes-at-point) (16777328 lambda nil (interactive) (funcall org-ref-open-pdf-function)) (16777333 . org-ref-open-url-at-point) (16777314 . org-ref-open-citation-at-point) (16777327 . org-ref-cite-hydra/body) (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t)) "no" "gtd" "test" "no" #("baroni_dont_2014" 0 16 (fontified t org-category "token_waka" invisible full face org-ref-cite-face mouse-face highlight keymap (keymap (tab lambda nil (interactive) (funcall org-ref-insert-cite-function)) (S-up . org-ref-sort-citation-link) (S-right lambda nil (interactive) (org-ref-swap-citation-link 1)) (S-left lambda nil (interactive) (org-ref-swap-citation-link -1)) (C-right . org-ref-next-key) (C-left . org-ref-previous-key) (16777337 lambda nil "Paste key at point. Assumes the first thing in the killring is a key." (interactive) (org-ref-insert-key-at-point (car kill-ring))) (16777303 lambda nil "Copy all the keys at point." (interactive) (kill-new (org-element-property :path (org-element-context)))) (16777335 lambda nil (interactive) (kill-new (car (org-ref-get-bibtex-key-and-file)))) (16777318 lambda nil (interactive) (save-excursion (org-ref-open-citation-at-point) (kill-new (org-ref-format-bibtex-entry-at-point)))) (16777319 . org-ref-google-scholar-at-point) (16777317 lambda nil "Email entry at point" (interactive) (org-ref-open-citation-at-point) (org-ref-email-bibtex-entry)) (16777315 . org-ref-wos-citing-at-point) (16777330 . org-ref-wos-related-at-point) (16777326 . org-ref-open-notes-at-point) (16777328 lambda nil (interactive) (funcall org-ref-open-pdf-function)) (16777333 . org-ref-open-url-at-point) (16777314 . org-ref-open-citation-at-point) (16777327 . org-ref-cite-hydra/body) (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo (lambda (window object position) (when org-ref-show-citation-on-enter (save-excursion (goto-char position) (let ((s (org-ref-format-entry (org-ref-get-bibtex-key-under-cursor)))) (with-temp-buffer (insert s) (fill-paragraph) (buffer-string)))))) htmlize-link (:uri "Citep:baroni_dont_2014") font-lock-multiline t)) "3" "2" #("heylen_looking_2012" 0 19 (font-lock-multiline t keymap (keymap (tab lambda nil (interactive) (funcall org-ref-insert-cite-function)) (S-up . org-ref-sort-citation-link) (S-right lambda nil (interactive) (org-ref-swap-citation-link 1)) (S-left lambda nil (interactive) (org-ref-swap-citation-link -1)) (C-right . org-ref-next-key) (C-left . org-ref-previous-key) (16777337 lambda nil "Paste key at point. Assumes the first thing in the killring is a key." (interactive) (org-ref-insert-key-at-point (car kill-ring))) (16777303 lambda nil "Copy all the keys at point." (interactive) (kill-new (org-element-property :path (org-element-context)))) (16777335 lambda nil (interactive) (kill-new (car (org-ref-get-bibtex-key-and-file)))) (16777318 lambda nil (interactive) (save-excursion (org-ref-open-citation-at-point) (kill-new (org-ref-format-bibtex-entry-at-point)))) (16777319 . org-ref-google-scholar-at-point) (16777317 lambda nil "Email entry at point" (interactive) (org-ref-open-citation-at-point) (org-ref-email-bibtex-entry)) (16777315 . org-ref-wos-citing-at-point) (16777330 . org-ref-wos-related-at-point) (16777326 . org-ref-open-notes-at-point) (16777328 lambda nil (interactive) (funcall org-ref-open-pdf-function)) (16777333 . org-ref-open-url-at-point) (16777314 . org-ref-open-citation-at-point) (16777327 . org-ref-cite-hydra/body) (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-ref-cite-face htmlize-link (:uri "citep:schutze_automatic_1998,heylen_looking_2012,heylen_monitoring_2015") help-echo (lambda (window object position) (when org-ref-show-citation-on-enter (save-excursion (goto-char position) (let ((s (org-ref-format-entry (org-ref-get-bibtex-key-under-cursor)))) (with-temp-buffer (insert s) (fill-paragraph) (buffer-string)))))) org-category "token_waka" fontified t)) #("schutze_automatic_1998" 0 22 (font-lock-multiline t htmlize-link (:uri "citep:schutze_automatic_1998,heylen_looking_2012,heylen_monitoring_2015") help-echo (lambda (window object position) (when org-ref-show-citation-on-enter (save-excursion (goto-char position) (let ((s (org-ref-format-entry (org-ref-get-bibtex-key-under-cursor)))) (with-temp-buffer (insert s) (fill-paragraph) (buffer-string)))))) keymap (keymap (tab lambda nil (interactive) (funcall org-ref-insert-cite-function)) (S-up . org-ref-sort-citation-link) (S-right lambda nil (interactive) (org-ref-swap-citation-link 1)) (S-left lambda nil (interactive) (org-ref-swap-citation-link -1)) (C-right . org-ref-next-key) (C-left . org-ref-previous-key) (16777337 lambda nil "Paste key at point. Assumes the first thing in the killring is a key." (interactive) (org-ref-insert-key-at-point (car kill-ring))) (16777303 lambda nil "Copy all the keys at point." (interactive) (kill-new (org-element-property :path (org-element-context)))) (16777335 lambda nil (interactive) (kill-new (car (org-ref-get-bibtex-key-and-file)))) (16777318 lambda nil (interactive) (save-excursion (org-ref-open-citation-at-point) (kill-new (org-ref-format-bibtex-entry-at-point)))) (16777319 . org-ref-google-scholar-at-point) (16777317 lambda nil "Email entry at point" (interactive) (org-ref-open-citation-at-point) (org-ref-email-bibtex-entry)) (16777315 . org-ref-wos-citing-at-point) (16777330 . org-ref-wos-related-at-point) (16777326 . org-ref-open-notes-at-point) (16777328 lambda nil (interactive) (funcall org-ref-open-pdf-function)) (16777333 . org-ref-open-url-at-point) (16777314 . org-ref-open-citation-at-point) (16777327 . org-ref-cite-hydra/body) (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-ref-cite-face org-category "token_waka" fontified t)) "3" "test" "18" "29" "17" "6" "25" "3" "python" "sh" "23" "tes" "12" "4" "14" "20" "1" "10" "1" "2" "3" "71" "1796" "1799" "1813" "17" "30" "13" "26" "sh" "emacs-lisp" "sh" "524" "2" "Reminder" "0.1" "Reminder" "1" "Reminder" "10" "2" "1" "R" "20" "q>" "33" "python" "/Users/idiig/.emacs.d/modules/" "/Users/idiig/anaconda3/bin/pyflakes s.py" "label:eq:2" "2007" "hey" "label:eq:1" "label:sec:1" #("martinc_leveraging_2020" 0 22 (font-lock-multiline t htmlize-link (:uri "citet:giulianelli_analysing_2020,martinc_leveraging_2020") help-echo (lambda (window object position) (when org-ref-show-citation-on-enter (save-excursion (goto-char position) (let ((s (org-ref-format-entry (org-ref-get-bibtex-key-under-cursor)))) (with-temp-buffer (insert s) (fill-paragraph) (buffer-string)))))) keymap (keymap (tab lambda nil (interactive) (funcall org-ref-insert-cite-function)) (S-up . org-ref-sort-citation-link) (S-right lambda nil (interactive) (org-ref-swap-citation-link 1)) (S-left lambda nil (interactive) (org-ref-swap-citation-link -1)) (C-right . org-ref-next-key) (C-left . org-ref-previous-key) (16777337 lambda nil "Paste key at point. Assumes the first thing in the killring is a key." (interactive) (org-ref-insert-key-at-point (car kill-ring))) (16777303 lambda nil "Copy all the keys at point." (interactive) (kill-new (org-element-property :path (org-element-context)))) (16777335 lambda nil (interactive) (kill-new (car (org-ref-get-bibtex-key-and-file)))) (16777318 lambda nil (interactive) (save-excursion (org-ref-open-citation-at-point) (kill-new (org-ref-format-bibtex-entry-at-point)))) (16777319 . org-ref-google-scholar-at-point) (16777317 lambda nil "Email entry at point" (interactive) (org-ref-open-citation-at-point) (org-ref-email-bibtex-entry)) (16777315 . org-ref-wos-citing-at-point) (16777330 . org-ref-wos-related-at-point) (16777326 . org-ref-open-notes-at-point) (16777328 lambda nil (interactive) (funcall org-ref-open-pdf-function)) (16777333 . org-ref-open-url-at-point) (16777314 . org-ref-open-citation-at-point) (16777327 . org-ref-cite-hydra/body) (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-ref-cite-face fontified t) 22 23 (font-lock-multiline t htmlize-link (:uri "citet:giulianelli_analysing_2020,martinc_leveraging_2020") help-echo (lambda (window object position) (when org-ref-show-citation-on-enter (save-excursion (goto-char position) (let ((s (org-ref-format-entry (org-ref-get-bibtex-key-under-cursor)))) (with-temp-buffer (insert s) (fill-paragraph) (buffer-string)))))) keymap (keymap (tab lambda nil (interactive) (funcall org-ref-insert-cite-function)) (S-up . org-ref-sort-citation-link) (S-right lambda nil (interactive) (org-ref-swap-citation-link 1)) (S-left lambda nil (interactive) (org-ref-swap-citation-link -1)) (C-right . org-ref-next-key) (C-left . org-ref-previous-key) (16777337 lambda nil "Paste key at point. Assumes the first thing in the killring is a key." (interactive) (org-ref-insert-key-at-point (car kill-ring))) (16777303 lambda nil "Copy all the keys at point." (interactive) (kill-new (org-element-property :path (org-element-context)))) (16777335 lambda nil (interactive) (kill-new (car (org-ref-get-bibtex-key-and-file)))) (16777318 lambda nil (interactive) (save-excursion (org-ref-open-citation-at-point) (kill-new (org-ref-format-bibtex-entry-at-point)))) (16777319 . org-ref-google-scholar-at-point) (16777317 lambda nil "Email entry at point" (interactive) (org-ref-open-citation-at-point) (org-ref-email-bibtex-entry)) (16777315 . org-ref-wos-citing-at-point) (16777330 . org-ref-wos-related-at-point) (16777326 . org-ref-open-notes-at-point) (16777328 lambda nil (interactive) (funcall org-ref-open-pdf-function)) (16777333 . org-ref-open-url-at-point) (16777314 . org-ref-open-citation-at-point) (16777327 . org-ref-cite-hydra/body) (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-ref-cite-face rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t)) "2" #("hilpert_using_2020" 0 18 (font-lock-multiline t keymap (keymap (tab lambda nil (interactive) (funcall org-ref-insert-cite-function)) (S-up . org-ref-sort-citation-link) (S-right lambda nil (interactive) (org-ref-swap-citation-link 1)) (S-left lambda nil (interactive) (org-ref-swap-citation-link -1)) (C-right . org-ref-next-key) (C-left . org-ref-previous-key) (16777337 lambda nil "Paste key at point. Assumes the first thing in the killring is a key." (interactive) (org-ref-insert-key-at-point (car kill-ring))) (16777303 lambda nil "Copy all the keys at point." (interactive) (kill-new (org-element-property :path (org-element-context)))) (16777335 lambda nil (interactive) (kill-new (car (org-ref-get-bibtex-key-and-file)))) (16777318 lambda nil (interactive) (save-excursion (org-ref-open-citation-at-point) (kill-new (org-ref-format-bibtex-entry-at-point)))) (16777319 . org-ref-google-scholar-at-point) (16777317 lambda nil "Email entry at point" (interactive) (org-ref-open-citation-at-point) (org-ref-email-bibtex-entry)) (16777315 . org-ref-wos-citing-at-point) (16777330 . org-ref-wos-related-at-point) (16777326 . org-ref-open-notes-at-point) (16777328 lambda nil (interactive) (funcall org-ref-open-pdf-function)) (16777333 . org-ref-open-url-at-point) (16777314 . org-ref-open-citation-at-point) (16777327 . org-ref-cite-hydra/body) (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-ref-cite-face invisible full htmlize-link (:uri "Citep:hilpert_using_2020") help-echo (lambda (window object position) (when org-ref-show-citation-on-enter (save-excursion (goto-char position) (let ((s (org-ref-format-entry (org-ref-get-bibtex-key-under-cursor)))) (with-temp-buffer (insert s) (fill-paragraph) (buffer-string)))))) fontified t)) "2" #("yamamoto_hachidaishu_2010" 0 24 (font-lock-multiline t htmlize-link (:uri "citet:yamamoto_hachidaishu_2010") help-echo (lambda (window object position) (when org-ref-show-citation-on-enter (save-excursion (goto-char position) (let ((s (org-ref-format-entry (org-ref-get-bibtex-key-under-cursor)))) (with-temp-buffer (insert s) (fill-paragraph) (buffer-string)))))) keymap (keymap (tab lambda nil (interactive) (funcall org-ref-insert-cite-function)) (S-up . org-ref-sort-citation-link) (S-right lambda nil (interactive) (org-ref-swap-citation-link 1)) (S-left lambda nil (interactive) (org-ref-swap-citation-link -1)) (C-right . org-ref-next-key) (C-left . org-ref-previous-key) (16777337 lambda nil "Paste key at point. Assumes the first thing in the killring is a key." (interactive) (org-ref-insert-key-at-point (car kill-ring))) (16777303 lambda nil "Copy all the keys at point." (interactive) (kill-new (org-element-property :path (org-element-context)))) (16777335 lambda nil (interactive) (kill-new (car (org-ref-get-bibtex-key-and-file)))) (16777318 lambda nil (interactive) (save-excursion (org-ref-open-citation-at-point) (kill-new (org-ref-format-bibtex-entry-at-point)))) (16777319 . org-ref-google-scholar-at-point) (16777317 lambda nil "Email entry at point" (interactive) (org-ref-open-citation-at-point) (org-ref-email-bibtex-entry)) (16777315 . org-ref-wos-citing-at-point) (16777330 . org-ref-wos-related-at-point) (16777326 . org-ref-open-notes-at-point) (16777328 lambda nil (interactive) (funcall org-ref-open-pdf-function)) (16777333 . org-ref-open-url-at-point) (16777314 . org-ref-open-citation-at-point) (16777327 . org-ref-cite-hydra/body) (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-ref-cite-face fontified t) 24 25 (font-lock-multiline t htmlize-link (:uri "citet:yamamoto_hachidaishu_2010") help-echo (lambda (window object position) (when org-ref-show-citation-on-enter (save-excursion (goto-char position) (let ((s (org-ref-format-entry (org-ref-get-bibtex-key-under-cursor)))) (with-temp-buffer (insert s) (fill-paragraph) (buffer-string)))))) keymap (keymap (tab lambda nil (interactive) (funcall org-ref-insert-cite-function)) (S-up . org-ref-sort-citation-link) (S-right lambda nil (interactive) (org-ref-swap-citation-link 1)) (S-left lambda nil (interactive) (org-ref-swap-citation-link -1)) (C-right . org-ref-next-key) (C-left . org-ref-previous-key) (16777337 lambda nil "Paste key at point. Assumes the first thing in the killring is a key." (interactive) (org-ref-insert-key-at-point (car kill-ring))) (16777303 lambda nil "Copy all the keys at point." (interactive) (kill-new (org-element-property :path (org-element-context)))) (16777335 lambda nil (interactive) (kill-new (car (org-ref-get-bibtex-key-and-file)))) (16777318 lambda nil (interactive) (save-excursion (org-ref-open-citation-at-point) (kill-new (org-ref-format-bibtex-entry-at-point)))) (16777319 . org-ref-google-scholar-at-point) (16777317 lambda nil "Email entry at point" (interactive) (org-ref-open-citation-at-point) (org-ref-email-bibtex-entry)) (16777315 . org-ref-wos-citing-at-point) (16777330 . org-ref-wos-related-at-point) (16777326 . org-ref-open-notes-at-point) (16777328 lambda nil (interactive) (funcall org-ref-open-pdf-function)) (16777333 . org-ref-open-url-at-point) (16777314 . org-ref-open-citation-at-point) (16777327 . org-ref-cite-hydra/body) (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-ref-cite-face rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t)) "lev" "hey" "ya" "de" "Dee" "BER" "p.4818" "
" "pa" "par" "2020" "lenci" "dont" "Hey"))
(setq swiper-history '("req" #("process fil" 0 11 (ivy-index 1)) #("         orb-process-file-keyword t" 0 1 (swiper-line-number 480 display "480  ") 1 35 (fontified t)) "org ref di" #("orb-" 0 4 (ivy-index 0)) #("           org-ref-notes-function 'orb-edit-notes)" 0 1 (display "420  " swiper-line-number 420) 1 50 (fontified t)) "mukk" #("evil" 0 4 (ivy-index 45)) #("     (evil-define-key 'motion org-agenda-mode-map (kbd \"q\") '(lambda () (interactive)" 0 1 (swiper-line-number 602 display "602  ") 1 6 (fontified t) 6 21 (fontified t face font-lock-keyword-face) 21 55 (fontified t) 55 58 (fontified t face font-lock-string-face) 58 73 (fontified t) 73 84 (fontified t face font-lock-keyword-face) 84 85 (fontified t)) "file" "pdf" #("noter" 0 5 (ivy-index 7)) #("    org-noter-notes-search-path \"~/Nutstore/org-files/research-notes\"" 0 1 (swiper-line-number 504 display "504  ") 1 32 (fontified t) 32 69 (fontified t face font-lock-string-face)) "babel" #("func" 0 4 (ivy-index 0)) #(" ;; org functions" 0 1 (swiper-line-number 185 display "185  ") 1 4 (fontified t face font-lock-comment-delimiter-face) 4 17 (fontified t face font-lock-comment-face)) #("zet" 0 3 (ivy-index 22)) #("       \"zo\" 'zetteldeft-find-file" 0 1 (display "298  " swiper-line-number 298) 1 7 (fontified t) 7 11 (face font-lock-string-face fontified t) 11 33 (fontified t)) #("org ref " 0 8 (ivy-index 68)) #("     (setq org-ref-bibliography-notes \"~/Nutstore/org-files/bibnote.org\"" 0 1 (swiper-line-number 390 display "390  ") 1 6 (fontified t) 6 10 (fontified t face font-lock-keyword-face) 10 38 (fontified t) 38 72 (fontified t face font-lock-string-face)) #("org-files" 0 9 (ivy-index 4)) #("     (setq org-roam-directory \"~/Nutstore/org-files\")" 0 1 (swiper-line-number 422 display "422  ") 1 6 (fontified t) 6 10 (face font-lock-keyword-face fontified t) 10 30 (fontified t) 30 42 (face font-lock-string-face fontified t) 42 52 (fontified t face font-lock-string-face) 52 53 (fontified t)) #("deft" 0 4 (ivy-index 2)) #(" (use-package deft" 0 1 (swiper-line-number 240 display "240  ") 1 2 (fontified t) 2 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t) 14 18 (fontified t face font-lock-constant-face)) #("roam" 0 4 (ivy-index 3)) #("   :hook (after-init . org-roam-mode)" 0 1 (swiper-line-number 306 display "306  ") 1 3 (fontified t) 3 8 (fontified t face font-lock-builtin-face) 8 37 (fontified t)) #("   :hook (org-roam-mode . org-roam-bibtex-mode)" 0 1 (swiper-line-number 449 display "449  ") 1 3 (fontified t) 3 8 (fontified t face font-lock-builtin-face) 8 47 (fontified t)) "journal" "html head" #("html" 0 4 (ivy-index 2)) #("     ;;http://www.howardism.org/Technical/Emacs/journaling-org.html" 0 1 (swiper-line-number 793 display "793  ") 1 5 (fontified t) 5 7 (fontified t face font-lock-comment-delimiter-face) 7 67 (fontified t face font-lock-comment-face)) #("agenda" 0 6 (ivy-index 10)) #("   (org-agenda-current-time-string \"<<<<<<<< now\")" 0 1 (swiper-line-number 494 display "494  ") 1 35 (fontified t) 35 49 (fontified t face font-lock-string-face) 49 50 (fontified t)) #("db" 0 2 (ivy-index 1)) #(" Hide Org Roam Db Location: /Users/idiig/.emacs.d/org-roam.db" 0 1 (swiper-line-number 73 display "73  ") 1 5 (display (image :type xpm :file "/usr/local/Cellar/emacs-plus@27/27.2/share/emacs/27.2/etc/images/custom/down.xpm" :ascent center) rear-nonsticky t keymap (keymap (111 . image-save) (114 . image-rotate) (C-mouse-4 . image-mouse-increase-size) (C-wheel-up . image-mouse-increase-size) (C-mouse-5 . image-mouse-decrease-size) (C-wheel-down . image-mouse-decrease-size) (43 . image-increase-size) (45 . image-decrease-size)))) #(" Show Value Org Roam Db Location " 0 1 (swiper-line-number 73 display "73  ") 1 11 (display (image :type xpm :file "/usr/local/Cellar/emacs-plus@27/27.2/share/emacs/27.2/etc/images/custom/right.xpm" :ascent center) rear-nonsticky t keymap (keymap (111 . image-save) (114 . image-rotate) (C-mouse-4 . image-mouse-increase-size) (C-wheel-up . image-mouse-increase-size) (C-mouse-5 . image-mouse-decrease-size) (C-wheel-down . image-mouse-decrease-size) (43 . image-increase-size) (45 . image-decrease-size)))) #("journal" 0 7 (ivy-index 1)) #(" (use-package org-journal" 0 1 (display "352  " swiper-line-number 352) 1 2 (fontified t) 2 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 25 (face font-lock-constant-face fontified t)) #(" ;; org-roam with bibtex creating notes for individual bibtex" 0 1 (swiper-line-number 326 display "326 ") 1 4 (fontified t face font-lock-comment-delimiter-face) 4 61 (fontified t face font-lock-comment-face)) "spacef" "spaces" "reftex" #("eses" 0 4 (ivy-index 0)) #("     (which-key-declare-prefixeses-for-mode 'org-mode" 0 1 (display "111 " swiper-line-number 111) 1 4 (fontified t) 4 53 (fontified t)) "prefix" #("roam bib" 0 8 (ivy-index 1)) #(" (use-package org-roam-bibtex" 0 1 (swiper-line-number 371 display "371  ") 1 2 (fontified t) 2 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t) 14 29 (fontified t face font-lock-constant-face)) #("org ref" 0 7 (ivy-index 46)) #(" (use-package org-ref" 0 1 (swiper-line-number 573 display "573  ") 1 2 (fontified t) 2 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t) 14 21 (fontified t face font-lock-constant-face)) #("       \"ra\" 'org-roam-alias-add)))" 0 1 (swiper-line-number 367 display "367  ") 1 7 (fontified t) 7 11 (fontified t face font-lock-string-face) 11 34 (fontified t)) #("     (evil-leader/set-key-for-mode 'org-mode \"po\" 'org-ref-open-pdf-at-point)" 0 1 (swiper-line-number 571 display "571  ") 1 45 (fontified t) 45 49 (fontified t face font-lock-string-face) 49 77 (fontified t)) "p o" #("agenda dir" 0 10 (ivy-index 2)) #("     (defvar org-agenda-dir \"~/Nutstore/org-notes\")" 0 1 (swiper-line-number 711 display "711  ") 1 6 (fontified t) 6 12 (fontified t face font-lock-keyword-face) 12 13 (fontified t) 13 27 (fontified t face font-lock-variable-name-face) 27 28 (fontified t) 28 49 (fontified t face font-lock-string-face) 49 50 (fontified t face font-lock-string-face) 50 51 (fontified t)) #("org-ref" 0 7 (ivy-index 9)) #("     (setq org-ref-completion-library 'org-ref-ivy-cite)" 0 1 (swiper-line-number 576 display "576  ") 1 6 (fontified t) 6 10 (fontified t face font-lock-keyword-face) 10 56 (fontified t)) #("org-agenda-dir " 0 15 (ivy-index 2)) #("     (setq org-agenda-file-note (expand-file-name \"notes.org\" org-agenda-dir))" 0 1 (display "709  " swiper-line-number 709) 1 6 (fontified t) 6 10 (face font-lock-keyword-face fontified t) 10 50 (fontified t) 50 61 (face font-lock-string-face fontified t) 61 78 (fontified t)) #("dired" 0 5 (ivy-index 46)) #("   (evil-define-key 'normal dired-mode-map \"q\" 'quit-window)" 0 1 (swiper-line-number 146 display "146 ") 1 4 (fontified t) 4 19 (fontified t face font-lock-keyword-face) 19 43 (fontified t) 43 46 (fontified t face font-lock-string-face) 46 60 (fontified t)) #("   :diminish (org-roam-mode)" 0 1 (swiper-line-number 322 display "322  ") 1 3 (fontified t) 3 12 (fontified t face font-lock-builtin-face) 12 28 (fontified t)) #(" (defvar roam-file \"\"" 0 1 (swiper-line-number 249 display "249  ") 1 2 (fontified t) 2 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 18 (fontified t face font-lock-variable-name-face) 18 19 (fontified t) 19 21 (fontified t face font-lock-string-face)) #(" (use-package org-roam" 0 1 (swiper-line-number 320 display "320  ") 1 2 (fontified t) 2 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t) 14 22 (fontified t face font-lock-constant-face)) #("   :diminish (org-roam-mode)" 0 1 (swiper-line-number 322 display "322  ") 1 3 (fontified t) 3 12 (fontified t face font-lock-builtin-face) 12 28 (fontified t)) #("     (setq deft-directory deft-dir)" 0 1 (swiper-line-number 267 display "267  ") 1 6 (fontified t) 6 10 (fontified t face font-lock-keyword-face) 10 35 (fontified t)) #(" (use-package org-roam" 0 1 (swiper-line-number 320 display "320  ") 1 2 (fontified t) 2 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t) 14 22 (fontified t face font-lock-constant-face)) #("dir" 0 3 (ivy-index 5)) #("       deft-dir \"~/Nutstore/org-notes\"" 0 1 (swiper-line-number 253 display "253  ") 1 16 (fontified t) 16 38 (fontified t face font-lock-string-face)) #(" org-roam--directory-files-recursively: Opening directory: No such file or directory, /Users/idiig/org-roam" 0 1 (display "116 " swiper-line-number 116 ivy-index 115) 1 107 (ivy-index 115)) #(" (use-package org-agenda" 0 1 (swiper-line-number 420 display "420  ") 1 2 (fontified t) 2 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t) 14 24 (fontified t face font-lock-constant-face)) #("   :hook (after-init . org-roam-mode)" 0 1 (swiper-line-number 323 display "323  ") 1 3 (fontified t) 3 8 (fontified t face font-lock-builtin-face) 8 37 (fontified t)) #("zett" 0 4 (ivy-index 2)) #(" (use-package zetteldeft" 0 1 (swiper-line-number 286 display "286  ") 1 2 (fontified t) 2 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t) 14 24 (fontified t face font-lock-constant-face)) "doom" "pa" "spacemacs/declare-prefix" #("     (spacemacs|hide-lighter org-roam-mode)))" 0 1 (display "351  " swiper-line-number 351) 1 44 (fontified t) 44 45 (fontified t rear-nonsticky t)) #("functio" 0 7 (ivy-index 0)) #(" ;; org functions" 0 1 (display "186  " swiper-line-number 186) 1 4 (face font-lock-comment-delimiter-face fontified t) 4 17 (face font-lock-comment-face fontified t)) #("mac" 0 3 (ivy-index 10)) #(" ;; mac抓取" 0 1 (display "342  " swiper-line-number 342) 1 4 (face font-lock-comment-delimiter-face fontified t) 4 9 (face font-lock-comment-face fontified t)) #("functions" 0 9 (ivy-index 0)) #(" ;; org functions" 0 1 (display "186  " swiper-line-number 186) 1 4 (face font-lock-comment-delimiter-face fontified t) 4 17 (face font-lock-comment-face fontified t)) "うち" #("for-mode 'prog" 0 14 (ivy-index 0)) #("for-mode 'prog
   (which-key-declare-prefixes-for-mode 'prog-mode \",=\" \"format\")
   (which-key-declare-prefixes-for-mode 'prog-mode \",a\" \"code actions\")
   (which-key-declare-prefixes-for-mode 'prog-mode \",b\" \"backend\")
   (which-key-declare-prefixes-for-mode 'prog-mode \",F\" \"folder\")
   (which-key-declare-prefixes-for-mode 'prog-mode \",g\" \"goto\")
   (which-key-declare-prefixes-for-mode 'prog-mode \",G\" \"peek\")
   (which-key-declare-prefixes-for-mode 'prog-mode \",h\" \"help\")
   (which-key-declare-prefixes-for-mode 'prog-mode \",r\" \"refactor\")
   (which-key-declare-prefixes-for-mode 'prog-mode \",T\" \"toggle\")
   (which-key-declare-prefixes-for-mode 'prog-mode \",x\" \"text/code\")
     (which-key-declare-prefixes-for-mode 'prog-mode (concat prefix \"h\") \"hierarchy\")
     (which-key-declare-prefixes-for-mode 'prog-mode (concat prefix \"m\") \"members\"))
   (which-key-declare-prefixes-for-mode 'prog-mode \"SPC m=\" \"format\")
   (which-key-declare-prefixes-for-mode 'prog-mode \"SPC ma\" \"code actions\")" 0 14 (ivy-index 0) 14 15 (read-only nil) 15 16 (read-only nil face ((:foreground "#ffffea") ivy-current-match) help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "112 " swiper-line-number 112) 16 46 (read-only nil face ((:foreground "#ffffea") ivy-current-match) help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 46 54 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ((:foreground "#ffffea") (background-color . "#7fff70efa01a") . ivy-minibuffer-match-face-2) fontified t) 54 55 (read-only nil face ((:foreground "#ffffea") ivy-current-match) help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 55 60 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ((:foreground "#ffffea") (background-color . "#7fff70efa01a") . ivy-minibuffer-match-face-2) fontified t) 60 66 (read-only nil face ((:foreground "#ffffea") ivy-current-match) help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 66 70 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ((:foreground "#ffffea") ivy-current-match font-lock-string-face) fontified t) 70 71 (read-only nil face ((:foreground "#ffffea") ivy-current-match) help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 71 79 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ((:foreground "#ffffea") ivy-current-match font-lock-string-face) fontified t) 79 80 (read-only nil face ((:foreground "#ffffea") ivy-current-match) help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 80 81 (read-only nil) 81 82 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "113 " swiper-line-number 113) 82 112 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 112 120 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 120 121 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 121 126 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 126 132 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 132 136 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 136 137 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 137 151 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 151 152 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 152 153 (read-only nil) 153 154 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "114 " swiper-line-number 114) 154 184 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 184 192 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 192 193 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 193 198 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 198 204 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 204 208 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 208 209 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 209 218 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 218 219 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 219 220 (read-only nil) 220 221 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "115 " swiper-line-number 115) 221 251 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 251 259 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 259 260 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 260 265 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 265 271 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 271 275 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 275 276 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 276 284 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 284 285 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 285 286 (read-only nil) 286 287 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "116 " swiper-line-number 116) 287 317 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 317 325 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 325 326 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 326 331 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 331 337 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 337 341 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 341 342 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 342 348 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 348 349 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 349 350 (read-only nil) 350 351 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "117 " swiper-line-number 117) 351 381 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 381 389 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 389 390 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 390 395 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 395 401 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 401 405 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 405 406 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 406 412 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 412 413 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 413 414 (read-only nil) 414 415 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "118 " swiper-line-number 118) 415 445 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 445 453 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 453 454 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 454 459 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 459 465 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 465 469 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 469 470 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 470 476 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 476 477 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 477 478 (read-only nil) 478 479 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "119 " swiper-line-number 119) 479 509 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 509 517 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 517 518 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 518 523 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 523 529 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 529 533 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 533 534 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 534 544 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 544 545 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 545 546 (read-only nil) 546 547 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "120 " swiper-line-number 120) 547 577 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 577 585 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 585 586 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 586 591 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 591 597 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 597 601 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 601 602 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 602 610 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 610 611 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 611 612 (read-only nil) 612 613 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "121 " swiper-line-number 121) 613 643 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 643 651 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 651 652 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 652 657 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 657 663 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 663 667 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 667 668 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 668 679 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 679 680 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 680 681 (read-only nil) 681 682 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "123 " swiper-line-number 123) 682 714 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 714 722 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 722 723 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 723 728 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 728 749 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 749 752 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 752 754 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 754 765 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 765 766 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 766 767 (read-only nil) 767 768 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "124 " swiper-line-number 124) 768 800 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 800 808 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 808 809 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 809 814 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 814 835 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 835 838 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 838 840 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 840 849 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 849 851 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 851 852 (read-only nil) 852 853 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "125 " swiper-line-number 125) 853 883 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 883 891 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 891 892 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 892 897 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 897 903 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 903 911 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 911 912 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 912 920 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 920 921 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 921 922 (read-only nil) 922 923 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "126 " swiper-line-number 126) 923 953 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 953 961 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 961 962 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 962 967 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 967 973 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 973 981 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 981 982 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 982 996 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 996 997 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t)) #("for-mode 'lsp-mode " 0 19 (ivy-index 0)) #("for-mode 'lsp-mode 
   (which-key-declare-prefixes-for-mode 'lsp-mode \",=\" \"format\")
   (which-key-declare-prefixes-for-mode 'lsp-mode \",a\" \"code actions\")
   (which-key-declare-prefixes-for-mode 'lsp-mode \",b\" \"backend\")
   (which-key-declare-prefixes-for-mode 'lsp-mode \",F\" \"folder\")
   (which-key-declare-prefixes-for-mode 'lsp-mode \",g\" \"goto\")
   (which-key-declare-prefixes-for-mode 'lsp-mode \",G\" \"peek\")
   (which-key-declare-prefixes-for-mode 'lsp-mode \",h\" \"help\")
   (which-key-declare-prefixes-for-mode 'lsp-mode \",r\" \"refactor\")
   (which-key-declare-prefixes-for-mode 'lsp-mode \",T\" \"toggle\")
   (which-key-declare-prefixes-for-mode 'lsp-mode \",x\" \"text/code\")
     (which-key-declare-prefixes-for-mode 'lsp-mode (concat prefix \"h\") \"hierarchy\")
     (which-key-declare-prefixes-for-mode 'lsp-mode (concat prefix \"m\") \"members\"))
   (which-key-declare-prefixes-for-mode 'lsp-mode \"SPC m=\" \"format\")
   (which-key-declare-prefixes-for-mode 'lsp-mode \"SPC ma\" \"code actions\")" 19 20 (read-only nil) 20 21 (swiper-line-number 112 display "112 " mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) face ((:foreground "#ffffea") ivy-current-match) read-only nil) 21 51 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) face ((:foreground "#ffffea") ivy-current-match) read-only nil) 51 59 (fontified t face ((:foreground "#ffffea") (background-color . "#7fff70efa01a") . ivy-minibuffer-match-face-2) mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 59 60 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) face ((:foreground "#ffffea") ivy-current-match) read-only nil) 60 69 (fontified t face ((:foreground "#ffffea") (background-color . "#7fff70efa01a") . ivy-minibuffer-match-face-2) mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 69 70 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) face ((:foreground "#ffffea") ivy-current-match) read-only nil) 70 74 (fontified t face ((:foreground "#ffffea") ivy-current-match font-lock-string-face) mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 74 75 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) face ((:foreground "#ffffea") ivy-current-match) read-only nil) 75 83 (fontified t face ((:foreground "#ffffea") ivy-current-match font-lock-string-face) mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 83 84 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) face ((:foreground "#ffffea") ivy-current-match) read-only nil) 84 85 (read-only nil) 85 86 (swiper-line-number 113 display "113 " mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 86 116 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 116 124 (fontified t face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 124 125 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 125 134 (fontified t face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 134 135 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 135 139 (fontified t face font-lock-string-face mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 139 140 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 140 154 (fontified t face font-lock-string-face mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 154 155 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 155 156 (read-only nil) 156 157 (swiper-line-number 114 display "114 " mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 157 187 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 187 195 (fontified t face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 195 196 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 196 205 (fontified t face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 205 206 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 206 210 (fontified t face font-lock-string-face mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 210 211 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 211 220 (fontified t face font-lock-string-face mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 220 221 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 221 222 (read-only nil) 222 223 (swiper-line-number 115 display "115 " mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 223 253 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 253 261 (fontified t face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 261 262 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 262 271 (fontified t face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 271 272 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 272 276 (fontified t face font-lock-string-face mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 276 277 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 277 285 (fontified t face font-lock-string-face mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 285 286 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 286 287 (read-only nil) 287 288 (swiper-line-number 116 display "116 " mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 288 318 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 318 326 (fontified t face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 326 327 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 327 336 (fontified t face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 336 337 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 337 341 (fontified t face font-lock-string-face mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 341 342 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 342 348 (fontified t face font-lock-string-face mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 348 349 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 349 350 (read-only nil) 350 351 (swiper-line-number 117 display "117 " mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 351 381 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 381 389 (fontified t face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 389 390 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 390 399 (fontified t face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 399 400 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 400 404 (fontified t face font-lock-string-face mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 404 405 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 405 411 (fontified t face font-lock-string-face mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 411 412 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 412 413 (read-only nil) 413 414 (swiper-line-number 118 display "118 " mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 414 444 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 444 452 (fontified t face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 452 453 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 453 462 (fontified t face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 462 463 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 463 467 (fontified t face font-lock-string-face mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 467 468 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 468 474 (fontified t face font-lock-string-face mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 474 475 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 475 476 (read-only nil) 476 477 (swiper-line-number 119 display "119 " mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 477 507 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 507 515 (fontified t face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 515 516 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 516 525 (fontified t face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 525 526 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 526 530 (fontified t face font-lock-string-face mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 530 531 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 531 541 (fontified t face font-lock-string-face mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 541 542 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 542 543 (read-only nil) 543 544 (swiper-line-number 120 display "120 " mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 544 574 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 574 582 (fontified t face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 582 583 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 583 592 (fontified t face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 592 593 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 593 597 (fontified t face font-lock-string-face mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 597 598 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 598 606 (fontified t face font-lock-string-face mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 606 607 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 607 608 (read-only nil) 608 609 (swiper-line-number 121 display "121 " mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 609 639 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 639 647 (fontified t face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 647 648 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 648 657 (fontified t face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 657 658 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 658 662 (fontified t face font-lock-string-face mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 662 663 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 663 674 (fontified t face font-lock-string-face mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 674 675 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 675 676 (read-only nil) 676 677 (swiper-line-number 123 display "123 " mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 677 709 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 709 717 (fontified t face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 717 718 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 718 727 (fontified t face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 727 743 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 743 746 (fontified t face font-lock-string-face mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 746 748 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 748 759 (fontified t face font-lock-string-face mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 759 760 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 760 761 (read-only nil) 761 762 (swiper-line-number 124 display "124 " mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 762 794 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 794 802 (fontified t face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 802 803 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 803 812 (fontified t face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 812 825 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 825 828 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 828 831 (fontified t face font-lock-string-face mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 831 833 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 833 842 (fontified t face font-lock-string-face mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 842 844 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 844 845 (read-only nil) 845 846 (swiper-line-number 125 display "125 " mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 846 876 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 876 884 (fontified t face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 884 885 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 885 894 (fontified t face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 894 895 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 895 903 (fontified t face font-lock-string-face mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 903 904 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 904 912 (fontified t face font-lock-string-face mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 912 913 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 913 914 (read-only nil) 914 915 (swiper-line-number 126 display "126 " mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 915 945 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 945 953 (fontified t face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 953 954 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 954 963 (fontified t face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 963 964 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 964 972 (fontified t face font-lock-string-face mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 972 973 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 973 987 (fontified t face font-lock-string-face mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 987 988 (fontified t mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil)) #("declare" 0 7 (ivy-index 2)) #("declare
 (defun idiig//lsp-declare-prefixes-for-mode ()
   (which-key-declare-prefixes \",=\" \"format\")
   (which-key-declare-prefixes \",a\" \"code actions\")
   (which-key-declare-prefixes \",b\" \"backend\")
   (which-key-declare-prefixes \",F\" \"folder\")
   (which-key-declare-prefixes \",g\" \"goto\")
   (which-key-declare-prefixes \",G\" \"peek\")
   (which-key-declare-prefixes \",h\" \"help\")
   (which-key-declare-prefixes \",r\" \"refactor\")
   (which-key-declare-prefixes \",T\" \"toggle\")
   (which-key-declare-prefixes \",x\" \"text/code\")
     (which-key-declare-prefixes (concat prefix \"h\") \"hierarchy\")
     (which-key-declare-prefixes (concat prefix \"m\") \"members\"))
   (which-key-declare-prefixes \"SPC m=\" \"format\")" 0 7 (ivy-index 2) 7 8 (read-only nil) 8 9 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "110 " swiper-line-number 110) 9 10 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 10 15 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-keyword-face fontified t) 15 16 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 16 27 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-function-name-face fontified t) 27 34 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face (ivy-minibuffer-match-face-2 font-lock-function-name-face) fontified t) 34 52 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-function-name-face fontified t) 52 55 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 55 56 (read-only nil) 56 57 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "112 " swiper-line-number 112) 57 70 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 70 77 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 77 87 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 87 91 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 91 92 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 92 100 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 100 101 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 101 102 (read-only nil) 102 103 (read-only nil face ((:foreground "#ffffea") ivy-current-match) help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "113 " swiper-line-number 113) 103 116 (read-only nil face ((:foreground "#ffffea") ivy-current-match) help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 116 123 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ((:foreground "#ffffea") (background-color . "#7fff70efa01a") . ivy-minibuffer-match-face-2) fontified t) 123 133 (read-only nil face ((:foreground "#ffffea") ivy-current-match) help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 133 137 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ((:foreground "#ffffea") ivy-current-match font-lock-string-face) fontified t) 137 138 (read-only nil face ((:foreground "#ffffea") ivy-current-match) help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 138 152 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ((:foreground "#ffffea") ivy-current-match font-lock-string-face) fontified t) 152 153 (read-only nil face ((:foreground "#ffffea") ivy-current-match) help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 153 154 (read-only nil) 154 155 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "114 " swiper-line-number 114) 155 168 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 168 175 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 175 185 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 185 189 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 189 190 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 190 199 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 199 200 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 200 201 (read-only nil) 201 202 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "115 " swiper-line-number 115) 202 215 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 215 222 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 222 232 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 232 236 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 236 237 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 237 245 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 245 246 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 246 247 (read-only nil) 247 248 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "116 " swiper-line-number 116) 248 261 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 261 268 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 268 278 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 278 282 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 282 283 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 283 289 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 289 290 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 290 291 (read-only nil) 291 292 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "117 " swiper-line-number 117) 292 305 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 305 312 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 312 322 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 322 326 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 326 327 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 327 333 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 333 334 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 334 335 (read-only nil) 335 336 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "118 " swiper-line-number 118) 336 349 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 349 356 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 356 366 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 366 370 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 370 371 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 371 377 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 377 378 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 378 379 (read-only nil) 379 380 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "119 " swiper-line-number 119) 380 393 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 393 400 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 400 410 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 410 414 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 414 415 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 415 425 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 425 426 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 426 427 (read-only nil) 427 428 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "120 " swiper-line-number 120) 428 441 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 441 448 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 448 458 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 458 462 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 462 463 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 463 471 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 471 472 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 472 473 (read-only nil) 473 474 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "121 " swiper-line-number 121) 474 487 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 487 494 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 494 504 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 504 508 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 508 509 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 509 520 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 520 521 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 521 522 (read-only nil) 522 523 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "123 " swiper-line-number 123) 523 538 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 538 545 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 545 548 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 548 570 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 570 573 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 573 575 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 575 586 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 586 587 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 587 588 (read-only nil) 588 589 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "124 " swiper-line-number 124) 589 604 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 604 611 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 611 636 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 636 639 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 639 641 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 641 650 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 650 652 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 652 653 (read-only nil) 653 654 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "125 " swiper-line-number 125) 654 667 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 667 674 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 674 684 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 684 692 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 692 693 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 693 701 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 701 702 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t)) #("declare
 (defun idiig//org-declare-prefixes-for-mode ()
   (which-key-declare-prefixes \"SPC mC\" \"clocks\")
   (which-key-declare-prefixes \"SPC md\" \"schedule\")
   (which-key-declare-prefixes \"SPC mi\" \"insert/add/set\")
   (which-key-declare-prefixes \"SPC ms\" \"subtree\")
   (which-key-declare-prefixes \"SPC mt\" \"table\")
   (which-key-declare-prefixes \"SPC mtd\" \"table delete\")
   (which-key-declare-prefixes \"SPC mtt\" \"table toggle\")
   (which-key-declare-prefixes \"SPC mti\" \"table insert\")
   (which-key-declare-prefixes \"SPC mb\" \"babel\")
   (which-key-declare-prefixes \"SPC mT\" \"toggle\")
   (which-key-declare-prefixes \"SPC mx\" \"region manipulation\")
   (which-key-declare-prefixes \"SPC mf\" \"feed\")
   (which-key-declare-prefixes \"SPC mz\" \"zetteldeft\")" 7 8 (read-only nil) 8 9 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "158  " swiper-line-number 158) 9 10 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 10 15 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-keyword-face fontified t) 15 16 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 16 27 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-function-name-face fontified t) 27 34 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face (ivy-minibuffer-match-face-2 font-lock-function-name-face) fontified t) 34 52 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-function-name-face fontified t) 52 55 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 55 56 (read-only nil) 56 57 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "159  " swiper-line-number 159) 57 70 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 70 77 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 77 87 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 87 95 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 95 96 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 96 104 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 104 105 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 105 106 (read-only nil) 106 107 (read-only nil face ((:foreground "#ffffea") ivy-current-match) help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "160  " swiper-line-number 160) 107 120 (read-only nil face ((:foreground "#ffffea") ivy-current-match) help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 120 127 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ((:foreground "#ffffea") (background-color . "#7fff70efa01a") . ivy-minibuffer-match-face-2) fontified t) 127 137 (read-only nil face ((:foreground "#ffffea") ivy-current-match) help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 137 145 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ((:foreground "#ffffea") ivy-current-match font-lock-string-face) fontified t) 145 146 (read-only nil face ((:foreground "#ffffea") ivy-current-match) help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 146 156 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ((:foreground "#ffffea") ivy-current-match font-lock-string-face) fontified t) 156 157 (read-only nil face ((:foreground "#ffffea") ivy-current-match) help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 157 158 (read-only nil) 158 159 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "161  " swiper-line-number 161) 159 172 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 172 179 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 179 189 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 189 197 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 197 198 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 198 214 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 214 215 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 215 216 (read-only nil) 216 217 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "162  " swiper-line-number 162) 217 230 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 230 237 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 237 247 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 247 255 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 255 256 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 256 265 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 265 266 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 266 267 (read-only nil) 267 268 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "163  " swiper-line-number 163) 268 281 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 281 288 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 288 298 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 298 306 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 306 307 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 307 314 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 314 315 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 315 316 (read-only nil) 316 317 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "164  " swiper-line-number 164) 317 330 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 330 337 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 337 347 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 347 356 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 356 357 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 357 371 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 371 372 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 372 373 (read-only nil) 373 374 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "165  " swiper-line-number 165) 374 387 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 387 394 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 394 404 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 404 413 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 413 414 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 414 428 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 428 429 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 429 430 (read-only nil) 430 431 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "166  " swiper-line-number 166) 431 444 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 444 451 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 451 458 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 458 461 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 461 470 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 470 471 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 471 485 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 485 486 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 486 487 (read-only nil) 487 488 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "167  " swiper-line-number 167) 488 501 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 501 508 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 508 518 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 518 526 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 526 527 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 527 534 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 534 535 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 535 536 (read-only nil) 536 537 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "168  " swiper-line-number 168) 537 550 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 550 557 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 557 567 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 567 575 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 575 576 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 576 584 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 584 585 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 585 586 (read-only nil) 586 587 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "169  " swiper-line-number 169) 587 600 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 600 607 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 607 617 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 617 625 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 625 626 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 626 647 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 647 648 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 648 649 (read-only nil) 649 650 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "170  " swiper-line-number 170) 650 663 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 663 670 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 670 680 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 680 688 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 688 689 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 689 695 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 695 696 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 696 697 (read-only nil) 697 698 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight display "171  " swiper-line-number 171) 698 711 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 711 718 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face ivy-minibuffer-match-face-2 fontified t) 718 728 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 728 736 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 736 737 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t) 737 749 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified t) 749 750 (read-only nil help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) mouse-face ivy-minibuffer-match-highlight fontified t)) #("file" 0 4 (ivy-index 0)) #(" Show Value Dap Breakpoints File " 0 1 (swiper-line-number 24 display "24 ") 1 11 (display (image :type xpm :file "/usr/local/Cellar/emacs-plus@27/27.2/share/emacs/27.2/etc/images/custom/right.xpm" :ascent center) rear-nonsticky t keymap (keymap (111 . image-save) (114 . image-rotate) (C-mouse-4 . image-mouse-increase-size) (C-wheel-up . image-mouse-increase-size) (C-mouse-5 . image-mouse-decrease-size) (C-wheel-down . image-mouse-decrease-size) (43 . image-increase-size) (45 . image-decrease-size)))) "dao" #(" Show Value Lsp Session File " 0 1 (swiper-line-number 210 display "210 ") 1 11 (display (image :type xpm :file "/usr/local/Cellar/emacs-plus@27/27.2/share/emacs/27.2/etc/images/custom/right.xpm" :ascent center) rear-nonsticky t keymap (keymap (111 . image-save) (114 . image-rotate) (C-mouse-4 . image-mouse-increase-size) (C-wheel-up . image-mouse-increase-size) (C-mouse-5 . image-mouse-decrease-size) (C-wheel-down . image-mouse-decrease-size) (43 . image-increase-size) (45 . image-decrease-size)))) #("wgre" 0 4 (ivy-index 0)) #(" (use-package wgrep" 0 1 (swiper-line-number 151 display "151 ") 1 2 (fontified t) 2 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t) 14 19 (fontified t face font-lock-constant-face)) #("       (add-hook 'with-editor-mode-hook 'evil-normalize-keymaps)" 0 1 (display "102 " swiper-line-number 102) 1 64 (fontified t)) #("     (evil-leader/set-key" 0 1 (display "65  " swiper-line-number 65) 1 25 (fontified t)) #("ze" 0 2 (ivy-index 8)) #(" (use-package zetteldeft" 0 1 (swiper-line-number 265 display "265  ") 1 2 (fontified t) 2 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t) 14 24 (fontified t face font-lock-constant-face)) "avy"))
(setq counsel-ibuffer-history '(#("     idiig-core.el            426 ELisp/d          ~/.emacs.d/core/idiig-core.el" 0 80 (ivy-index 4 idx 4)) #(" *   idiig-better-ed...      2880 ELisp/d          ~/.emacs.d/core/idiig-better-editor.el" 0 89 (idx 4 ivy-index 4)) #(" *   idiig-project-s...      5148 ELisp/d          ~/.emacs.d/modules/idiig-project-search-management.el" 0 104 (idx 5 ivy-index 5)) #("     *scratch*                144 Lisp Interaction " 0 51 (idx 0 ivy-index 0)) #(" *   *helm-ag*                533 Hmm              " 0 51 (idx 2 ivy-index 2)) #(" *   *scratch*                146 Lisp Interaction " 0 51 (ivy-index 1 idx 1)) #(" *%  *Messages*               375 Messages         " 0 51 (idx 1 ivy-index 1)) #("     *scratch*                145 Lisp Interaction " 0 51 (idx 0 ivy-index 0))))
(setq ivy-history '(#("/Users/idiig/.emacs.d/core/idiig-auto-complete.el" 0 49 (ivy-index 2)) #("/Users/idiig/Nutstore/org-files/research-notes/booij_grammar_2007.org" 0 69 (ivy-index 0)) #("test" 0 4 (ivy-index 0)) #("/Users/idiig/Nutstore/bibfolder/bibliography.bib" 0 48 (ivy-index 3)) #("/Users/idiig/.emacs.d/modules/idiig-tex.el" 0 42 (ivy-index 1)) #("bi" 0 2 (ivy-index 0)) #("/Users/idiig/.emacs.d/modules/idiig-org.el" 0 42 (ivy-index 1)) #("bib" 0 3 (ivy-index 0)) #("*Messages*" 0 10 (ivy-index 3)) #("au" 0 2 (ivy-index 0)) #("/Users/idiig/Nutstore/org-files/research-notes/baker_british_1993.org" 0 69 (ivy-index 3)) #("Baroni" 0 6 (ivy-index 0)) #("methodology" 0 11 (ivy-index 0)) #("baker_british_1993: British Traditions in Text Analysis. From Firth to Sinclair" 0 79 (ivy-index 0 idx 0)) #("waka" 0 4 (ivy-index 1)) "/Users/idiig/Nutstore/works/on_work/token_waka/token_waka.org" #("a" 0 1 (ivy-index 0)) #("tex" 0 3 (ivy-index 0)) #("org" 0 3 (ivy-index 0)) #("/Users/idiig/.emacs.d/core/idiig-global-keybindings.el" 0 54 (ivy-index 0)) #("key" 0 3 (ivy-index 0)) #("org-noter" 0 9 (ivy-index 0)) "/Users/idiig/Nutstore/works/on_work/token_waka/token_waka.org" "/Users/idiig/Nutstore/works/on_work/token_waka/token_waka.bib" #("spac" 0 4 (ivy-index 5)) "/Users/idiig/git/spacemacs_config-based-on-zilongshanren-/init.el" "/Users/idiig/Nutstore/works/on_work/token_waka/token_waka.org" "/Users/idiig/Nutstore/works/on_work/token_waka/token_waka.bib" "/Users/idiig/Nutstore/works/on_work/token_waka/token_waka.bib" "/Users/idiig/Nutstore/works/on_work/token_waka/token_waka.org" #("wak" 0 3 (ivy-index 0)) "/Users/idiig/Nutstore/works/on_work/token_waka/token_waka.bib" #("test 2" 0 6 (idx 1 ivy-index 1)) #("/Users/idiig/Nutstore/org-files/research-notes/2021-05-05-2246 test 2.org" 0 73 (ivy-index 0)) #("/Users/idiig/Nutstore/org-files/research-notes/2021-05-05-2250 test 3.org" 0 73 (ivy-index 2)) #("*Warnings*" 0 10 (ivy-index 10)) #("/Users/idiig/Nutstore/org-files/research-notes/yasuoka_koten_2018.org" 0 69 (ivy-index 0)) #("/yasuoka_koten_2018.org" 0 23 (ivy-index 2)) #("/2021-05-05-2246 test 2.org" 0 27 (ivy-index 3)) #("test: 古典中国語（漢文）の形態素解析とその応用" 0 26 (ivy-index 0 idx 0)) #("/Users/idiig/emacs-test/test.org" 0 32 (ivy-index 0)) #("s.org" 0 5 (ivy-index 2)) "/Users/idiig/emacs-test/s.org" "/Users/idiig/Nutstore/works/on_work/token_waka/token_waka.org" #("/Users/idiig/Nutstore/works/on_work/token_waka/token_waka.org" 0 61 (ivy-index 0)) #("/Users/idiig/Nutstore/org-notes/schutze_automatic_1998.org" 0 58 (ivy-index 2)) #("^org-di" 0 7 (ivy-index 0)) "org-directory" #("idiig-" 0 6 (ivy-index 0)) #("/Users/idiig/Nutstore/org-notes/gtd.org" 0 39 (ivy-index 2)) #("T" 0 1 (ivy-index 0)) "TITLE: " #("TI" 0 2 (ivy-index 0)) "TITLE: " #("/Users/idiig/Nutstore/org-notes/journal.org" 0 43 (ivy-index 2)) #("/Users/idiig/Nutstore/org-notes/notes.org" 0 41 (ivy-index 0)) #("Bibliography" 0 12 (idx 7 ivy-index 7)) #("https://github.com/idiig/org-notes.git" 0 38 (ivy-index 0)) #("学习docker，command line，git" 0 25 (idx 8 ivy-index 8)) #("Workspace" 0 9 (idx 3 ivy-index 3)) #("cu" 0 2 (ivy-index 0)) "/Users/idiig/.emacs.d/core/custom.el" #("org-roam" 0 8 (ivy-index 0)) #("eslint" 0 6 (idx 0 ivy-index 0)) #("/Users/idiig/Nutstore/org-notes/bibnotes/test.org" 0 49 (ivy-index 0)) #("wak pd" 0 6 (ivy-index 0)) "/Users/idiig/Nutstore/works/on_work/token_waka/token_waka.pdf" #("pd" 0 2 (ivy-index 0)) "/Users/idiig/Nutstore/works/on_work/token_waka/token_waka.pdf" #("idiig evi" 0 9 (ivy-index 0)) "/Users/idiig/.emacs.d/core/idiig-evil.el" #("idiig-org" 0 9 (ivy-index 0)) #("token_waka.org" 0 14 (ivy-index 2)) #("/Users/idiig/.emacs.d/core/idiig-ui.el" 0 38 (ivy-index 2)) #("idiig-ui" 0 8 (ivy-index 0)) #("idiig ui" 0 8 (ivy-index 0)) "/Users/idiig/Downloads/.DS_Store" #("test.tex" 0 8 (ivy-index 1)) "/Users/idiig/Downloads/test.tex" "/Users/idiig/Nutstore/works/on_work/token_waka/test.tex" #("space" 0 5 (ivy-index 0)) "/Users/idiig/git/spacemacs/layers/+readers/deft/packages.el" #("init" 0 4 (ivy-index 0)) "/Users/idiig/.emacs.d/init.el" #("idiig-or" 0 8 (ivy-index 0)) #("/Users/idiig/emacs-test/s.org" 0 29 (ivy-index 0)) #("/Users/idiig/.emacs.d/core/idiig-better-default.el" 0 50 (ivy-index 3)) #("better" 0 6 (ivy-index 1)) "/Users/idiig/.emacs.d/core/idiig-better-search.el" #("/Users/idiig/.emacs.d/core/idiig-evil.el" 0 40 (ivy-index 0)) #("evi" 0 3 (ivy-index 0)) #("bett" 0 4 (ivy-index 1)) #("s" 0 1 (ivy-index 0)) "*scratch*" #("ui" 0 2 (ivy-index 2)) #("idiig ui." 0 9 (ivy-index 0)) #("ja" 0 2 (ivy-index 1)) "/Users/idiig/.emacs.d/modules/idiig-japanese.el"))
(setq counsel-M-x-history '(#("org-noter" 0 9 (ivy-index 0)) #("org noter" 0 9 (ivy-index 0)) #("org no" 0 6 (ivy-index 0)) #("org-roam-capture" 0 16 (ivy-index 0)) #("org roam ca" 0 11 (ivy-index 0)) #("refresh" 0 7 (ivy-index 2)) "deft-refresh" #("customize grou" 0 14 (ivy-index 0)) "customize-group" #("org-open-at-point" 0 17 (ivy-index 0)) #("deft " 0 5 (ivy-index 3)) "deft-refresh" #("de" 0 2 (ivy-index 0)) #("deft" 0 4 (ivy-index 0)) #("def" 0 3 (ivy-index 0)) #("open po" 0 7 (ivy-index 0)) #("customize gr" 0 12 (ivy-index 0)) "customize-group" #("open poi" 0 8 (ivy-index 0)) #("org-roam" 0 8 (ivy-index 0)) #("org roam" 0 8 (ivy-index 0)) #("helm-resume" 0 11 (ivy-index 0)) #("helm res" 0 8 (ivy-index 0)) #("helm resu" 0 9 (ivy-index 0)) #("orc" 0 3 (ivy-index 0)) #("org " 0 4 (ivy-index 11)) #("org ref show " 0 13 (ivy-index 0)) "org-table-show-reference" #("org-show-entry" 0 14 (ivy-index 0)) #("org entry sho" 0 13 (ivy-index 0)) #("bibtex org" 0 10 (ivy-index 20)) "org-ref-bibtex-file/body" #("bibtex" 0 6 (ivy-index 8)) "bibtex-entry" #("helm bib" 0 8 (ivy-index 2)) "helm-bibtex-with-notes" #("helm-bibtex" 0 11 (ivy-index 0)) #("oro" 0 3 (ivy-index 7)) "org-ref-bibtex" "customize-group" #("org agenda " 0 11 (ivy-index 20)) "org-agenda-columns" #("org agenda" 0 10 (ivy-index 106)) "org-agenda-clockreport-mode" "org-agenda-set-property" #("or" 0 2 (ivy-index 0)) "org-toggle-pretty-entities" #("pretty" 0 6 (ivy-index 3)) "org-toggle-pretty-entities" #("org-agenda-columns" 0 18 (ivy-index 0)) #("doo" 0 3 (ivy-index 0)) "doom-modeline-mode" #("zett" 0 4 (ivy-index 1)) "zetteldeft-new-file" #("customize-group" 0 15 (ivy-index 1)) #("cust gr" 0 7 (ivy-index 0)) #("package-autoremove" 0 18 (ivy-index 0)) #("auto re" 0 7 (ivy-index 1)) #("magit" 0 5 (ivy-index 0)) #("ignore gi" 0 9 (ivy-index 2)) "magit-gitignore" #("org" 0 3 (ivy-index 7)) "org-yank" #("bench" 0 5 (ivy-index 4)) "benchmark-init/show-durations-tree" "benchmark-init/show-durations-tree" "benchmark-init/show-durations-tree" "benchmark-init/show-durations-tree" "benchmark-init/show-durations-tree" #("benc" 0 4 (ivy-index 4)) "benchmark-init/show-durations-tree" "benchmark-init/show-durations-tree" "benchmark-init/show-durations-tree" "benchmark-init/show-durations-tree" "benchmark-init/show-durations-tree" "benchmark-init/show-durations-tabulated" "benchmark-init/show-durations-tree" "benchmark-init/show-durations-tree" "benchmark-init/show-durations-tabulated" "benchmark-init/show-durations-tree" "benchmark-init/show-durations-tabulated" "benchmark" "benchmark-init/show-durations-tree" #("esu" 0 3 (ivy-index 0)) #("esup" 0 4 (ivy-index 3)) "esup-mode" "esup-visit-item" "esup-display-results" #("ben" 0 3 (ivy-index 5)) "benchmark-init/show-durations-tabulated" "benchmark-init/show-durations-tree" "benchmark-init/show-durations-tree" "benchmark-init/show-durations-tree" "benchmark-init/show-durations-tree" "benchmark-init/show-durations-tree" "benchmark-init/show-durations-tree" "benchmark-init/show-durations-tree" #("tree be" 0 7 (ivy-index 0))))
(setq evil-ex-history '(#("%s/roam-notes/research-notes" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28)) #("%s/org-notes/org-files" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22)) #("%s/-for-mode 'prog-mode/" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24)) #("%s/lsp/prog" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11)) #("%s/\"SPC/\"C-SPC" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14)) #("%s/define-key dir/evil-define-key 'normal dir" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31) 31 32 (ex-index 32) 32 33 (ex-index 33) 33 34 (ex-index 34) 34 35 (ex-index 35) 35 36 (ex-index 36) 36 37 (ex-index 37) 37 38 (ex-index 38) 38 39 (ex-index 39) 39 40 (ex-index 40) 40 41 (ex-index 41) 41 42 (ex-index 42) 42 43 (ex-index 43) 43 44 (ex-index 44) 44 45 (ex-index 45)) #("%s/green/red" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12)) #("%s/\"SPC /," 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10)) #("%s/\"m/\"SPC m" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12)) #("%s/idiig\\/.+-for-mode/which-key-declare-prefixes" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31) 31 32 (ex-index 32) 32 33 (ex-index 33) 33 34 (ex-index 34) 34 35 (ex-index 35) 35 36 (ex-index 36) 36 37 (ex-index 37) 37 38 (ex-index 38) 38 39 (ex-index 39) 39 40 (ex-index 40) 40 41 (ex-index 41) 41 42 (ex-index 42) 42 43 (ex-index 43) 43 44 (ex-index 44) 44 45 (ex-index 45) 45 46 (ex-index 46) 46 47 (ex-index 47) 47 48 (ex-index 48)) #("%s/idiig\\/dec/ssss" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18)) #("%s/idiig.+for-mode/which-key-declare-prefixes " 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31) 31 32 (ex-index 32) 32 33 (ex-index 33) 33 34 (ex-index 34) 34 35 (ex-index 35) 35 36 (ex-index 36) 36 37 (ex-index 37) 37 38 (ex-index 38) 38 39 (ex-index 39) 39 40 (ex-index 40) 40 41 (ex-index 41) 41 42 (ex-index 42) 42 43 (ex-index 43) 43 44 (ex-index 44) 44 45 (ex-index 45) 45 46 (ex-index 46)) #("%s/which-key-/idiig\\/" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21)) #("%s/evil-leader\\/set-key-for-mode/idiig\\/set-leader-keys-for-minor-mode" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31) 31 32 (ex-index 32) 32 33 (ex-index 33) 33 34 (ex-index 34) 34 35 (ex-index 35) 35 36 (ex-index 36) 36 37 (ex-index 37) 37 38 (ex-index 38) 38 39 (ex-index 39) 39 40 (ex-index 40) 40 41 (ex-index 41) 41 42 (ex-index 42) 42 43 (ex-index 43) 43 44 (ex-index 44) 44 45 (ex-index 45) 45 46 (ex-index 46) 46 47 (ex-index 47) 47 48 (ex-index 48) 48 49 (ex-index 49) 49 50 (ex-index 50) 50 51 (ex-index 51) 51 52 (ex-index 52) 52 53 (ex-index 53) 53 54 (ex-index 54) 54 55 (ex-index 55) 55 56 (ex-index 56) 56 57 (ex-index 57) 57 58 (ex-index 58) 58 59 (ex-index 59) 59 60 (ex-index 60) 60 61 (ex-index 61) 61 62 (ex-index 62) 62 63 (ex-index 63) 63 64 (ex-index 64) 64 65 (ex-index 65) 65 66 (ex-index 66) 66 67 (ex-index 67) 67 68 (ex-index 68) 68 69 (ex-index 69) 69 70 (ex-index 70)) #("%s/)/\"" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("%s/(/,\"" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7)) #("%s/\\//," 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7)) #("%s/-test/" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9)) #("%s/spacemacs\\/python/pytest" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27)) #("%s/\\n/" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("（" 0 1 (ex-index 1)) #("%s/spacemacs/idiig" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18)) #("%s/spacemacs/ifiig" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18)) #("%s/defvar/s" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11)) #("'<,'>" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5))))
(setq buffer-name-history '("*scratch*" "all_7.csv"))
(setq file-name-history '(#("/Users/idiig/emacs-test/test.org" 0 32 (ivy-index 0)) #("/Users/idiig/Nutstore/works/on_work/token_waka/" 0 47 (ivy-index 0)) #("/Users/idiig/Nutstore/org-notes/" 0 32 (ivy-index 0)) #("/Users/idiig/Nutstore/org-notes/org-roam.db" 0 43 (ivy-index 0)) #("/Users/idiig/.emacs.d/core/" 0 27 (ivy-index 0)) #("/Users/idiig/Nutstore/org-notes/bibnotes/" 0 41 (ivy-index 0)) #("/Users/idiig/Nutstore/org-notes/bibnotes/test.org" 0 49 (ivy-index 2)) #("/Users/idiig/.emacs.d/modules/idiig-tex.el" 0 42 (ivy-index 0)) #("/Users/idiig/" 0 13 (ivy-index 0)) #("/Users/idiig/Nutstore/org-notes/org-roam-server.org" 0 51 (ivy-index 0)) #("/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/preprocessing.py" 0 69 (ivy-index 11)) #("/Users/idiig/.emacs.d/" 0 22 (ivy-index 0)) #("/Users/idiig/.emacs.d/.gitignore" 0 32 (ivy-index 0)) #("/Users/idiig/.emacs.d/.git/" 0 27 (ivy-index 2)) #("/Users/idiig/.gitignore" 0 23 (ivy-index 0)) #("/Users/idiig/.emacs.d/.git/.gitignore" 0 37 (ivy-index 0)) #("/Users/idiig/git/spacemacs/init.el" 0 34 (ivy-index 10)) #("/Users/idiig/git/spacemacs_config-based-on-zilongshanren-/" 0 58 (ivy-index 1)) #("/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/tk_vec.py" 0 62 (ivy-index 0)) #("/Users/idiig/.emacs.d/modules/" 0 30 (ivy-index 0)) #("/Users/idiig/.emacs.d/core/idiig-evil.el" 0 40 (ivy-index 0)) #("/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/" 0 53 (ivy-index 0)) #("/Users/idiig/.emacs.d/.cache/" 0 29 (ivy-index 6)) #("/Users/idiig/.emacs.d/modules/idiig-git.el" 0 42 (ivy-index 0)) #("/Users/idiig/emacs-test/" 0 24 (ivy-index 0)) #("/Users/idiig/Downloads/log" 0 26 (ivy-index 0)) #("/Users/idiig/Downloads/plan9.itermcolors" 0 40 (ivy-index 0)) #("/Users/idiig/Downloads/pencil-light.itermcolors" 0 47 (ivy-index 0)) #("/Users/idiig/emacs-test/test.el" 0 31 (ivy-index 0)) #("/Users/idiig/Nutstore/org-notes/gtd.org" 0 39 (ivy-index 2)) #("/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/kaekotoba.csv" 0 66 (ivy-index 0)) #("/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/kakekotoba.txt" 0 67 (ivy-index 0)) #("/Users/idiig/Nutstore/works/on_work/token_waka/exp_1/engo.txt" 0 61 (ivy-index 0)) #("/Users/idiig/Nutstore/works/" 0 28 (ivy-index 0)) #("/Users/idiig/.emacs.d/modules/idiig-python.el" 0 45 (ivy-index 6)) #("/Users/idiig/.emacs.d/modules/idiig-org.el" 0 42 (ivy-index 4)) #("/Users/idiig/.emacs.d/modules/idiig-evil-evilified-state.el" 0 59 (ivy-index 0)) #("/Users/idiig/.emacs.d/init.el" 0 29 (ivy-index 8)) #("/Users/idiig/.emacs.d/eshell/" 0 29 (ivy-index 8)) #("/Users/idiig/.emacs.d/core/.DS_Store" 0 36 (ivy-index 4)) #("/Users/idiig/.emacs.d/core/idiig-ui.el" 0 38 (ivy-index 4)) "~/.emacs.d/modules/idiig-better-search.el" #("/Users/idiig/.emacs.d/modules/idiig-ess.el" 0 42 (ivy-index 0)) #("/Users/idiig/emacs-test/s.r" 0 27 (ivy-index 0)) #("/Users/idiig/.emacs.d/modules/idiig-r.el" 0 40 (ivy-index 2)) #("/Users/idiig/emacs-test/s.org" 0 29 (ivy-index 0)) #("/Users/idiig/emacs-test/s.py" 0 28 (ivy-index 0)) #("/Users/idiig/.emacs.d/modules/idiig-prog.el" 0 43 (ivy-index 0)) #("/Users/idiig/Nutstore/works/on_work/token_waka/draft.txt" 0 56 (ivy-index 3)) #("/Users/idiig/Nutstore/works/on_work/token_waka/test.tex" 0 55 (ivy-index 0)) #("/Users/idiig/Nutstore/works/on_work/token_waka/token_waka.pdf" 0 61 (ivy-index 3)) #("/Users/idiig/Downloads/" 0 23 (ivy-index 0)) #("/Users/idiig/Downloads/文本-F3F46926A5D2-1.txt" 0 44 (ivy-index 6)) #("/Users/idiig/Downloads/test.org" 0 31 (ivy-index 0)) #("/Users/idiig/Downloads/#test.org#" 0 33 (ivy-index 4)) #("/Users/idiig/emacstest/test.bib" 0 31 (ivy-index 0)) #("/Users/idiig/emacstest/chicago.bst" 0 34 (ivy-index 0)) #("/Users/idiig/emacstest/agsm.bst" 0 31 (ivy-index 0)) #("/Users/idiig/emacstest/org.log" 0 30 (ivy-index 3)) #("/Users/idiig/emacstest/unified.bst" 0 34 (ivy-index 0)) #("/Users/idiig/emacstest/" 0 23 (ivy-index 0)) #("/Users/idiig/non_parallel_test/kj_31_11.txt" 0 43 (ivy-index 0)) #("/Users/idiig/non_parallel_test/kj_23_21.txt" 0 43 (ivy-index 0)) #("/Users/idiig/non_parallel_test/kj_16_29.txt" 0 43 (ivy-index 0)) #("/Users/idiig/non_parallel_test/kj_14_29.txt" 0 43 (ivy-index 0)) #("/Users/idiig/non_parallel_test/kj_5_1.txt" 0 41 (ivy-index 0)) #("/Users/idiig/non_parallel_test/kj_4_09.txt" 0 42 (ivy-index 0)) #("/Users/idiig/test_2.csv" 0 23 (ivy-index 0)) #("/Users/idiig/.emacs.d/modules/idiig-auto-complete.el" 0 52 (ivy-index 4)) #("/Users/idiig/Nutstore/zemi/20201225/test.tex" 0 44 (ivy-index 0)) #("/Users/idiig/Nutstore/zemi/20201225/" 0 36 (ivy-index 0)) #("/Users/idiig/Nutstore/zemi/20201225/ibm_model_note.org" 0 54 (ivy-index 0)) #("/Users/idiig/emacstest/org.org" 0 30 (ivy-index 0)) "
./
../
idiig-ui.el
custom.el
.DS_Store
idiig-packages.el
idiig-core-funcのコピー.el
idiig-better-default.el
idiig-global-keybindings.el
idiig-global-keybindingsのコピー.el" #("/Users/idiig/.emacs.d/modules/idiig-evil.el" 0 43 (ivy-index 3)) #("/Users/idiig/.emacs.d/core/idiig-better-default.el" 0 50 (ivy-index 0)) #("/Users/idiig/.emacs.d/core/idiig-core-func.el" 0 45 (ivy-index 0)) #("/Users/idiig/.emacs.d/core/idiig-core.el" 0 40 (ivy-index 0)) #("/Users/idiig/.emacs.d/modules/idiig-project-search-management.el" 0 64 (ivy-index 7)) "~/.emacs.d/modules/idiig-evil.el" "~/.emacs.d/modules/idiig-project-search-management.el" "~/.emacs.d/init.el" "~/.emacs.d/modules/idiig-auto-complete.el" "~/.emacs.d/modules/idiig-auto-completeのコピー.el" "~/.emacs.d/core/" "~/.emacs.d/modules/idiig-parens-config.el" "~/.emacs.d/core/idiig-better-editor.el" "~/.emacs.d/core/idiig-packages.el" "~/.emacs.d/core/idiig-global-keybindings.el" "~/.emacs.d/core/idiig-editor.el" "~/.emacs.d/core/idiig-ui.el" "~/.emacs.d/custom.el" "~/.emacs.d/core/idiig-custom.el"))
(setq extended-command-history '("evil-surround-change" "recentf-open-files" "company-quickhelp-manual-begin" "company-mode" "kill-buffer" "company-mode" "idiig/auto-completion-key-sequence-end" "auto-complete" "autoconf-mode" "auto-complete" "company-complete" "company-quickhelp-mode" "company-select-next" "company-quickhelp-mode" "eval-buffer"))
(setq evil-jumps-history '((13991 "/Users/idiig/.emacs.d/modules/idiig-tex.el") (6772 "/Users/idiig/.emacs.d/core/idiig-auto-complete.el") (12933 "/Users/idiig/.emacs.d/modules/idiig-tex.el") (12090 "/Users/idiig/.emacs.d/modules/idiig-tex.el") (11522 "/Users/idiig/.emacs.d/modules/idiig-org.el") (6483 "/Users/idiig/Nutstore/bibfolder/bibliography.bib") (14632 "/Users/idiig/.emacs.d/modules/idiig-tex.el") (6483 "/Users/idiig/Nutstore/bibfolder/bibliography.bib") (14632 "/Users/idiig/.emacs.d/modules/idiig-tex.el") (6483 "/Users/idiig/Nutstore/bibfolder/bibliography.bib") (9699 "/Users/idiig/.emacs.d/modules/idiig-tex.el") (7063 "/Users/idiig/Nutstore/bibfolder/bibliography.bib") (9125 "/Users/idiig/.emacs.d/modules/idiig-tex.el") (6483 "/Users/idiig/Nutstore/bibfolder/bibliography.bib") (12273 "/Users/idiig/.emacs.d/modules/idiig-tex.el") (12315 "/Users/idiig/.emacs.d/modules/idiig-org.el") (12273 "/Users/idiig/.emacs.d/modules/idiig-tex.el") (5694 "/Users/idiig/.emacs.d/core/idiig-auto-complete.el") (5692 "/Users/idiig/.emacs.d/core/idiig-auto-complete.el") (13123 "/Users/idiig/.emacs.d/modules/idiig-tex.el") (11512 "/Users/idiig/.emacs.d/modules/idiig-org.el") (14157 "/Users/idiig/.emacs.d/modules/idiig-tex.el") (4669 "/Users/idiig/Nutstore/bibfolder/bibliography.bib")))
(setq search-ring '(#("avy" 0 3 (isearch-regexp-function nil isearch-case-fold-search t)) #("transient-state" 0 15 (isearch-case-fold-search t isearch-regexp-function nil)) #("idiig-packages/packages" 0 23 (isearch-case-fold-search t isearch-regexp-function nil)) #("auto-completion-complete-with-key-sequence" 0 42 (isearch-case-fold-search t isearch-regexp-function nil)) #(")" 0 1 (isearch-case-fold-search t isearch-regexp-function nil)) #(": )" 0 3 (isearch-regexp-function nil isearch-case-fold-search t)) #("company-complete-common-or-cycle" 0 32 (isearch-regexp-function nil isearch-case-fold-search t))))
(setq regexp-search-ring '(#("\\(process\\).*?\\(fil\\)" 0 21 (isearch-case-fold-search nil)) "orb-" "evil" #("noter" 0 5 (isearch-case-fold-search nil)) "func" #("zet" 0 3 (isearch-case-fold-search nil)) #("\\(org\\).*?\\(ref\\)" 0 17 (isearch-case-fold-search nil)) #("roam-notes" 0 10 (isearch-regexp-function nil isearch-case-fold-search nil)) "org-files" #("org-notes" 0 9 (isearch-regexp-function nil isearch-case-fold-search nil)) "deft" "roam" #("\\<\\*\\>" 0 6 (isearch-case-fold-search nil)) "html" "agenda" "db"))
